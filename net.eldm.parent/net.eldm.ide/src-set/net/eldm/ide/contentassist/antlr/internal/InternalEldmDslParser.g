/*
 * generated by Xtext 2.15.0
 */
parser grammar InternalEldmDslParser;

options {
	tokenVocab=InternalEldmDslLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
}

@header {
package net.eldm.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import net.eldm.services.EldmDslGrammarAccess;

}
@members {
	private EldmDslGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("LineFeed", "'\n'");
		tokenNameToValue.put("CarriageReturn", "'\r'");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("Asterisk", "'*'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("EqualsSign", "'='");
		tokenNameToValue.put("QuestionMark", "'?'");
		tokenNameToValue.put("CommercialAt", "'@'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("NumberSignLeftParenthesis", "'#('");
		tokenNameToValue.put("HyphenMinusGreaterThanSign", "'->'");
		tokenNameToValue.put("FullStopFullStop", "'..'");
		tokenNameToValue.put("As", "'as'");
		tokenNameToValue.put("Any", "'any'");
		tokenNameToValue.put("Def", "'def'");
		tokenNameToValue.put("Flt", "'flt'");
		tokenNameToValue.put("Get", "'get'");
		tokenNameToValue.put("Int", "'int'");
		tokenNameToValue.put("Lda", "'lda'");
		tokenNameToValue.put("Ldt", "'ldt'");
		tokenNameToValue.put("Let", "'let'");
		tokenNameToValue.put("Ltm", "'ltm'");
		tokenNameToValue.put("Mut", "'mut'");
		tokenNameToValue.put("Set", "'set'");
		tokenNameToValue.put("Str", "'str'");
		tokenNameToValue.put("Bool", "'bool'");
		tokenNameToValue.put("Defs", "'defs'");
		tokenNameToValue.put("Enum", "'enum'");
		tokenNameToValue.put("From", "'from'");
		tokenNameToValue.put("Lda_1", "'lda@'");
		tokenNameToValue.put("Ldt_1", "'ldt@'");
		tokenNameToValue.put("Ltm_1", "'ltm@'");
		tokenNameToValue.put("Mask", "'mask'");
		tokenNameToValue.put("Null", "'null'");
		tokenNameToValue.put("Path", "'path'");
		tokenNameToValue.put("True", "'true'");
		tokenNameToValue.put("Exp", "'<exp>'");
		tokenNameToValue.put("Async", "'async'");
		tokenNameToValue.put("False", "'false'");
		tokenNameToValue.put("Regex", "'regex'");
		tokenNameToValue.put("Module", "'module'");
		tokenNameToValue.put("Return", "'return'");
		tokenNameToValue.put("Block", "'<block>'");
		tokenNameToValue.put("Typedef", "'typedef'");
		tokenNameToValue.put("PlugDsl", "'plug-dsl'");
		tokenNameToValue.put("Test10", "'{test:10}'");
	}

	public void setGrammarAccess(EldmDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleModule
entryRuleModule
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModuleAccess().getGroup()); }
		(rule__Module__Group__0)
		{ after(grammarAccess.getModuleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePlugDsl
entryRulePlugDsl
:
{ before(grammarAccess.getPlugDslRule()); }
	 rulePlugDsl
{ after(grammarAccess.getPlugDslRule()); } 
	 EOF 
;

// Rule PlugDsl
rulePlugDsl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPlugDslAccess().getGroup()); }
		(rule__PlugDsl__Group__0)
		{ after(grammarAccess.getPlugDslAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImport
entryRuleImport
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportAccess().getAlternatives()); }
		(rule__Import__Alternatives)
		{ after(grammarAccess.getImportAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportOperation
entryRuleImportOperation
:
{ before(grammarAccess.getImportOperationRule()); }
	 ruleImportOperation
{ after(grammarAccess.getImportOperationRule()); } 
	 EOF 
;

// Rule ImportOperation
ruleImportOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportOperationAccess().getGroup()); }
		(rule__ImportOperation__Group__0)
		{ after(grammarAccess.getImportOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDefinition
entryRuleImportDefinition
:
{ before(grammarAccess.getImportDefinitionRule()); }
	 ruleImportDefinition
{ after(grammarAccess.getImportDefinitionRule()); } 
	 EOF 
;

// Rule ImportDefinition
ruleImportDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDefinitionAccess().getGroup()); }
		(rule__ImportDefinition__Group__0)
		{ after(grammarAccess.getImportDefinitionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalDef
entryRuleExternalDef
:
{ before(grammarAccess.getExternalDefRule()); }
	 ruleExternalDef
{ after(grammarAccess.getExternalDefRule()); } 
	 EOF 
;

// Rule ExternalDef
ruleExternalDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalDefAccess().getAlternatives()); }
		(rule__ExternalDef__Alternatives)
		{ after(grammarAccess.getExternalDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExternalModule
entryRuleExternalModule
:
{ before(grammarAccess.getExternalModuleRule()); }
	 ruleExternalModule
{ after(grammarAccess.getExternalModuleRule()); } 
	 EOF 
;

// Rule ExternalModule
ruleExternalModule 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExternalModuleAccess().getAlternatives()); }
		(rule__ExternalModule__Alternatives)
		{ after(grammarAccess.getExternalModuleAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSubPath
entryRuleSubPath
:
{ before(grammarAccess.getSubPathRule()); }
	 ruleSubPath
{ after(grammarAccess.getSubPathRule()); } 
	 EOF 
;

// Rule SubPath
ruleSubPath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSubPathAccess().getGroup()); }
		(rule__SubPath__Group__0)
		{ after(grammarAccess.getSubPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperation
entryRuleOperation
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperationAccess().getGroup()); }
		(rule__Operation__Group__0)
		{ after(grammarAccess.getOperationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParamDef
entryRuleParamDef
:
{ before(grammarAccess.getParamDefRule()); }
	 ruleParamDef
{ after(grammarAccess.getParamDefRule()); } 
	 EOF 
;

// Rule ParamDef
ruleParamDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParamDefAccess().getAlternatives()); }
		(rule__ParamDef__Alternatives)
		{ after(grammarAccess.getParamDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBlockExpression
entryRuleBlockExpression
:
{ before(grammarAccess.getBlockExpressionRule()); }
	 ruleBlockExpression
{ after(grammarAccess.getBlockExpressionRule()); } 
	 EOF 
;

// Rule BlockExpression
ruleBlockExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlockExpressionAccess().getGroup()); }
		(rule__BlockExpression__Group__0)
		{ after(grammarAccess.getBlockExpressionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getExpKeyword()); }
		Exp
		{ after(grammarAccess.getExpressionAccess().getExpKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapExpression
entryRuleMapExpression
:
{ before(grammarAccess.getMapExpressionRule()); }
	 ruleMapExpression
{ after(grammarAccess.getMapExpressionRule()); } 
	 EOF 
;

// Rule MapExpression
ruleMapExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapExpressionAccess().getTest10Keyword()); }
		Test10
		{ after(grammarAccess.getMapExpressionAccess().getTest10Keyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDefinition
entryRuleDefinition
:
{ before(grammarAccess.getDefinitionRule()); }
	 ruleDefinition
{ after(grammarAccess.getDefinitionRule()); } 
	 EOF 
;

// Rule Definition
ruleDefinition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDefinitionAccess().getAlternatives()); }
		(rule__Definition__Alternatives)
		{ after(grammarAccess.getDefinitionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumDef
entryRuleEnumDef
:
{ before(grammarAccess.getEnumDefRule()); }
	 ruleEnumDef
{ after(grammarAccess.getEnumDefRule()); } 
	 EOF 
;

// Rule EnumDef
ruleEnumDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumDefAccess().getGroup()); }
		(rule__EnumDef__Group__0)
		{ after(grammarAccess.getEnumDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumItemDef
entryRuleEnumItemDef
:
{ before(grammarAccess.getEnumItemDefRule()); }
	 ruleEnumItemDef
{ after(grammarAccess.getEnumItemDefRule()); } 
	 EOF 
;

// Rule EnumItemDef
ruleEnumItemDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumItemDefAccess().getGroup()); }
		(rule__EnumItemDef__Group__0)
		{ after(grammarAccess.getEnumItemDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElementTypeDef
entryRuleElementTypeDef
:
{ before(grammarAccess.getElementTypeDefRule()); }
	 ruleElementTypeDef
{ after(grammarAccess.getElementTypeDefRule()); } 
	 EOF 
;

// Rule ElementTypeDef
ruleElementTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementTypeDefAccess().getAlternatives()); }
		(rule__ElementTypeDef__Alternatives)
		{ after(grammarAccess.getElementTypeDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValueDef
entryRuleValueDef
:
{ before(grammarAccess.getValueDefRule()); }
	 ruleValueDef
{ after(grammarAccess.getValueDefRule()); } 
	 EOF 
;

// Rule ValueDef
ruleValueDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueDefAccess().getAlternatives()); }
		(rule__ValueDef__Alternatives)
		{ after(grammarAccess.getValueDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapDef
entryRuleMapDef
:
{ before(grammarAccess.getMapDefRule()); }
	 ruleMapDef
{ after(grammarAccess.getMapDefRule()); } 
	 EOF 
;

// Rule MapDef
ruleMapDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapDefAccess().getAlternatives()); }
		(rule__MapDef__Alternatives)
		{ after(grammarAccess.getMapDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapEntryDef
entryRuleMapEntryDef
:
{ before(grammarAccess.getMapEntryDefRule()); }
	 ruleMapEntryDef
{ after(grammarAccess.getMapEntryDefRule()); } 
	 EOF 
;

// Rule MapEntryDef
ruleMapEntryDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapEntryDefAccess().getGroup()); }
		(rule__MapEntryDef__Group__0)
		{ after(grammarAccess.getMapEntryDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListDef
entryRuleListDef
:
{ before(grammarAccess.getListDefRule()); }
	 ruleListDef
{ after(grammarAccess.getListDefRule()); } 
	 EOF 
;

// Rule ListDef
ruleListDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListDefAccess().getGroup()); }
		(rule__ListDef__Group__0)
		{ after(grammarAccess.getListDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNativeDef
entryRuleNativeDef
:
{ before(grammarAccess.getNativeDefRule()); }
	 ruleNativeDef
{ after(grammarAccess.getNativeDefRule()); } 
	 EOF 
;

// Rule NativeDef
ruleNativeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNativeDefAccess().getAlternatives()); }
		(rule__NativeDef__Alternatives)
		{ after(grammarAccess.getNativeDefAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLiteral
entryRuleLiteral
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
		(rule__Literal__Alternatives)
		{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNullLiteral
entryRuleNullLiteral
:
{ before(grammarAccess.getNullLiteralRule()); }
	 ruleNullLiteral
{ after(grammarAccess.getNullLiteralRule()); } 
	 EOF 
;

// Rule NullLiteral
ruleNullLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNullLiteralAccess().getGroup()); }
		(rule__NullLiteral__Group__0)
		{ after(grammarAccess.getNullLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral
:
{ before(grammarAccess.getBoolLiteralRule()); }
	 ruleBoolLiteral
{ after(grammarAccess.getBoolLiteralRule()); } 
	 EOF 
;

// Rule BoolLiteral
ruleBoolLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getGroup()); }
		(rule__BoolLiteral__Group__0)
		{ after(grammarAccess.getBoolLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStrLiteral
entryRuleStrLiteral
:
{ before(grammarAccess.getStrLiteralRule()); }
	 ruleStrLiteral
{ after(grammarAccess.getStrLiteralRule()); } 
	 EOF 
;

// Rule StrLiteral
ruleStrLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStrLiteralAccess().getValueAssignment()); }
		(rule__StrLiteral__ValueAssignment)
		{ after(grammarAccess.getStrLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral
:
{ before(grammarAccess.getIntLiteralRule()); }
	 ruleIntLiteral
{ after(grammarAccess.getIntLiteralRule()); } 
	 EOF 
;

// Rule IntLiteral
ruleIntLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
		(rule__IntLiteral__ValueAssignment)
		{ after(grammarAccess.getIntLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFltLiteral
entryRuleFltLiteral
:
{ before(grammarAccess.getFltLiteralRule()); }
	 ruleFltLiteral
{ after(grammarAccess.getFltLiteralRule()); } 
	 EOF 
;

// Rule FltLiteral
ruleFltLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFltLiteralAccess().getValueAssignment()); }
		(rule__FltLiteral__ValueAssignment)
		{ after(grammarAccess.getFltLiteralAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateLiteral
entryRuleDateLiteral
:
{ before(grammarAccess.getDateLiteralRule()); }
	 ruleDateLiteral
{ after(grammarAccess.getDateLiteralRule()); } 
	 EOF 
;

// Rule DateLiteral
ruleDateLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateLiteralAccess().getGroup()); }
		(rule__DateLiteral__Group__0)
		{ after(grammarAccess.getDateLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral
:
{ before(grammarAccess.getTimeLiteralRule()); }
	 ruleTimeLiteral
{ after(grammarAccess.getTimeLiteralRule()); } 
	 EOF 
;

// Rule TimeLiteral
ruleTimeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeLiteralAccess().getGroup()); }
		(rule__TimeLiteral__Group__0)
		{ after(grammarAccess.getTimeLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateTimeLiteral
entryRuleDateTimeLiteral
:
{ before(grammarAccess.getDateTimeLiteralRule()); }
	 ruleDateTimeLiteral
{ after(grammarAccess.getDateTimeLiteralRule()); } 
	 EOF 
;

// Rule DateTimeLiteral
ruleDateTimeLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateTimeLiteralAccess().getGroup()); }
		(rule__DateTimeLiteral__Group__0)
		{ after(grammarAccess.getDateTimeLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleListLiteral
entryRuleListLiteral
:
{ before(grammarAccess.getListLiteralRule()); }
	 ruleListLiteral
{ after(grammarAccess.getListLiteralRule()); } 
	 EOF 
;

// Rule ListLiteral
ruleListLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getListLiteralAccess().getGroup()); }
		(rule__ListLiteral__Group__0)
		{ after(grammarAccess.getListLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapLiteral
entryRuleMapLiteral
:
{ before(grammarAccess.getMapLiteralRule()); }
	 ruleMapLiteral
{ after(grammarAccess.getMapLiteralRule()); } 
	 EOF 
;

// Rule MapLiteral
ruleMapLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapLiteralAccess().getGroup()); }
		(rule__MapLiteral__Group__0)
		{ after(grammarAccess.getMapLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMapEntryLiteral
entryRuleMapEntryLiteral
:
{ before(grammarAccess.getMapEntryLiteralRule()); }
	 ruleMapEntryLiteral
{ after(grammarAccess.getMapEntryLiteralRule()); } 
	 EOF 
;

// Rule MapEntryLiteral
ruleMapEntryLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMapEntryLiteralAccess().getGroup()); }
		(rule__MapEntryLiteral__Group__0)
		{ after(grammarAccess.getMapEntryLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral
:
{ before(grammarAccess.getEnumLiteralRule()); }
	 ruleEnumLiteral
{ after(grammarAccess.getEnumLiteralRule()); } 
	 EOF 
;

// Rule EnumLiteral
ruleEnumLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEnumLiteralAccess().getGroup()); }
		(rule__EnumLiteral__Group__0)
		{ after(grammarAccess.getEnumLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePatternLiteral
entryRulePatternLiteral
:
{ before(grammarAccess.getPatternLiteralRule()); }
	 rulePatternLiteral
{ after(grammarAccess.getPatternLiteralRule()); } 
	 EOF 
;

// Rule PatternLiteral
rulePatternLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternLiteralAccess().getGroup()); }
		(rule__PatternLiteral__Group__0)
		{ after(grammarAccess.getPatternLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePath
entryRulePath
:
{ before(grammarAccess.getPathRule()); }
	 rulePath
{ after(grammarAccess.getPathRule()); } 
	 EOF 
;

// Rule Path
rulePath 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPathAccess().getGroup()); }
		(rule__Path__Group__0)
		{ after(grammarAccess.getPathAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedNameInStaticImport
entryRuleQualifiedNameInStaticImport
:
{ before(grammarAccess.getQualifiedNameInStaticImportRule()); }
	 ruleQualifiedNameInStaticImport
{ after(grammarAccess.getQualifiedNameInStaticImportRule()); } 
	 EOF 
;

// Rule QualifiedNameInStaticImport
ruleQualifiedNameInStaticImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		(
			{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
			(rule__QualifiedNameInStaticImport__Group__0)
			{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
		)
		(
			{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
			(rule__QualifiedNameInStaticImport__Group__0)*
			{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getGroup()); }
		)
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBREAK
entryRuleBREAK
:
{ before(grammarAccess.getBREAKRule()); }
	 ruleBREAK
{ after(grammarAccess.getBREAKRule()); } 
	 EOF 
;

// Rule BREAK
ruleBREAK 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBREAKAccess().getAlternatives()); }
		(rule__BREAK__Alternatives)*
		{ after(grammarAccess.getBREAKAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportAccess().getImportOperationParserRuleCall_0()); }
		ruleImportOperation
		{ after(grammarAccess.getImportAccess().getImportOperationParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getImportAccess().getImportDefinitionParserRuleCall_1()); }
		ruleImportDefinition
		{ after(grammarAccess.getImportAccess().getImportDefinitionParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefAccess().getGroup_0()); }
		(rule__ExternalDef__Group_0__0)
		{ after(grammarAccess.getExternalDefAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternalDefAccess().getNameAssignment_1()); }
		(rule__ExternalDef__NameAssignment_1)
		{ after(grammarAccess.getExternalDefAccess().getNameAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalModule__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalModuleAccess().getRefAssignment_0()); }
		(rule__ExternalModule__RefAssignment_0)
		{ after(grammarAccess.getExternalModuleAccess().getRefAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExternalModuleAccess().getGroup_1()); }
		(rule__ExternalModule__Group_1__0)
		{ after(grammarAccess.getExternalModuleAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getIsGetAssignment_1_0()); }
		(rule__Operation__IsGetAssignment_1_0)
		{ after(grammarAccess.getOperationAccess().getIsGetAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperationAccess().getSetKeyword_1_1()); }
		Set
		{ after(grammarAccess.getOperationAccess().getSetKeyword_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamDefAccess().getDefAssignment_0()); }
		(rule__ParamDef__DefAssignment_0)
		{ after(grammarAccess.getParamDefAccess().getDefAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getParamDefAccess().getRefAssignment_1()); }
		(rule__ParamDef__RefAssignment_1)
		{ after(grammarAccess.getParamDefAccess().getRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Definition__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDefinitionAccess().getTypeDefParserRuleCall_0()); }
		ruleTypeDef
		{ after(grammarAccess.getDefinitionAccess().getTypeDefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getEnumDefParserRuleCall_1()); }
		ruleEnumDef
		{ after(grammarAccess.getDefinitionAccess().getEnumDefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDefinitionAccess().getExternalDefParserRuleCall_2()); }
		ruleExternalDef
		{ after(grammarAccess.getDefinitionAccess().getExternalDefParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup_2_0()); }
		(rule__TypeDef__Group_2_0__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDefAccess().getTypeAssignment_2_1()); }
		(rule__TypeDef__TypeAssignment_2_1)
		{ after(grammarAccess.getTypeDefAccess().getTypeAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__ParserAlternatives_2_0_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getParserRegexKeyword_2_0_0_0_0()); }
		Regex
		{ after(grammarAccess.getTypeDefAccess().getParserRegexKeyword_2_0_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDefAccess().getParserMaskKeyword_2_0_0_0_1()); }
		Mask
		{ after(grammarAccess.getTypeDefAccess().getParserMaskKeyword_2_0_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDefAccess().getParserReturnKeyword_2_0_0_0_2()); }
		Return
		{ after(grammarAccess.getTypeDefAccess().getParserReturnKeyword_2_0_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementTypeDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeDefAccess().getValueDefParserRuleCall_0()); }
		ruleValueDef
		{ after(grammarAccess.getElementTypeDefAccess().getValueDefParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementTypeDefAccess().getRefAssignment_1()); }
		(rule__ElementTypeDef__RefAssignment_1)
		{ after(grammarAccess.getElementTypeDefAccess().getRefAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueDefAccess().getNativeAssignment_0()); }
		(rule__ValueDef__NativeAssignment_0)
		{ after(grammarAccess.getValueDefAccess().getNativeAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getValueDefAccess().getListDefParserRuleCall_1()); }
		ruleListDef
		{ after(grammarAccess.getValueDefAccess().getListDefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getValueDefAccess().getMapDefParserRuleCall_2()); }
		ruleMapDef
		{ after(grammarAccess.getValueDefAccess().getMapDefParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDefAccess().getGroup_0()); }
		(rule__MapDef__Group_0__0)
		{ after(grammarAccess.getMapDefAccess().getGroup_0()); }
	)
	|
	(
		{ before(grammarAccess.getMapDefAccess().getGroup_1()); }
		(rule__MapDef__Group_1__0)
		{ after(grammarAccess.getMapDefAccess().getGroup_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryDefAccess().getGroup_1_0()); }
		(rule__MapEntryDef__Group_1_0__0)
		{ after(grammarAccess.getMapEntryDefAccess().getGroup_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getMapEntryDefAccess().getGroup_1_1()); }
		(rule__MapEntryDef__Group_1_1__0)
		{ after(grammarAccess.getMapEntryDefAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeDef__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNativeDefAccess().getAnyKeyword_0()); }
		Any
		{ after(grammarAccess.getNativeDefAccess().getAnyKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getBoolKeyword_1()); }
		Bool
		{ after(grammarAccess.getNativeDefAccess().getBoolKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getStrKeyword_2()); }
		Str
		{ after(grammarAccess.getNativeDefAccess().getStrKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getIntKeyword_3()); }
		Int
		{ after(grammarAccess.getNativeDefAccess().getIntKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getFltKeyword_4()); }
		Flt
		{ after(grammarAccess.getNativeDefAccess().getFltKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getLdaKeyword_5()); }
		Lda
		{ after(grammarAccess.getNativeDefAccess().getLdaKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getLtmKeyword_6()); }
		Ltm
		{ after(grammarAccess.getNativeDefAccess().getLtmKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getLdtKeyword_7()); }
		Ldt
		{ after(grammarAccess.getNativeDefAccess().getLdtKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getNativeDefAccess().getPathKeyword_8()); }
		Path
		{ after(grammarAccess.getNativeDefAccess().getPathKeyword_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_0()); }
		ruleNullLiteral
		{ after(grammarAccess.getLiteralAccess().getNullLiteralParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_1()); }
		ruleBoolLiteral
		{ after(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getStrLiteralParserRuleCall_2()); }
		ruleStrLiteral
		{ after(grammarAccess.getLiteralAccess().getStrLiteralParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_3()); }
		ruleIntLiteral
		{ after(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getFltLiteralParserRuleCall_4()); }
		ruleFltLiteral
		{ after(grammarAccess.getLiteralAccess().getFltLiteralParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getDateLiteralParserRuleCall_5()); }
		ruleDateLiteral
		{ after(grammarAccess.getLiteralAccess().getDateLiteralParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getTimeLiteralParserRuleCall_6()); }
		ruleTimeLiteral
		{ after(grammarAccess.getLiteralAccess().getTimeLiteralParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getDateTimeLiteralParserRuleCall_7()); }
		ruleDateTimeLiteral
		{ after(grammarAccess.getLiteralAccess().getDateTimeLiteralParserRuleCall_7()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_8()); }
		ruleListLiteral
		{ after(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_8()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_9()); }
		ruleMapLiteral
		{ after(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_9()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getEnumLiteralParserRuleCall_10()); }
		ruleEnumLiteral
		{ after(grammarAccess.getLiteralAccess().getEnumLiteralParserRuleCall_10()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getPatternLiteralParserRuleCall_11()); }
		rulePatternLiteral
		{ after(grammarAccess.getLiteralAccess().getPatternLiteralParserRuleCall_11()); }
	)
	|
	(
		{ before(grammarAccess.getLiteralAccess().getPathAssignment_12()); }
		(rule__Literal__PathAssignment_12)
		{ after(grammarAccess.getLiteralAccess().getPathAssignment_12()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getFalseKeyword_1_0()); }
		False
		{ after(grammarAccess.getBoolLiteralAccess().getFalseKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getBoolLiteralAccess().getIsTrueAssignment_1_1()); }
		(rule__BoolLiteral__IsTrueAssignment_1_1)
		{ after(grammarAccess.getBoolLiteralAccess().getIsTrueAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BREAK__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBREAKAccess().getLineFeedKeyword_0()); }
		LineFeed
		{ after(grammarAccess.getBREAKAccess().getLineFeedKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBREAKAccess().getCarriageReturnKeyword_1()); }
		CarriageReturn
		{ after(grammarAccess.getBREAKAccess().getCarriageReturnKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
	Module
	{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
	(rule__Module__NameAssignment_1)
	{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getImportsAssignment_2()); }
	(rule__Module__ImportsAssignment_2)*
	{ after(grammarAccess.getModuleAccess().getImportsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getPlugsAssignment_3()); }
	(rule__Module__PlugsAssignment_3)*
	{ after(grammarAccess.getModuleAccess().getPlugsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getGroup_4()); }
	(rule__Module__Group_4__0)?
	{ after(grammarAccess.getModuleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__5__Impl
	rule__Module__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getOpersAssignment_5()); }
	(rule__Module__OpersAssignment_5)*
	{ after(grammarAccess.getModuleAccess().getOpersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getPathsAssignment_6()); }
	(rule__Module__PathsAssignment_6)*
	{ after(grammarAccess.getModuleAccess().getPathsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4__0__Impl
	rule__Module__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getDefsKeyword_4_0()); }
	Defs
	{ after(grammarAccess.getModuleAccess().getDefsKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4__1__Impl
	rule__Module__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getBEGINTerminalRuleCall_4_1()); }
	RULE_BEGIN
	{ after(grammarAccess.getModuleAccess().getBEGINTerminalRuleCall_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4__2__Impl
	rule__Module__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getModuleAccess().getDefsAssignment_4_2()); }
		(rule__Module__DefsAssignment_4_2)
		{ after(grammarAccess.getModuleAccess().getDefsAssignment_4_2()); }
	)
	(
		{ before(grammarAccess.getModuleAccess().getDefsAssignment_4_2()); }
		(rule__Module__DefsAssignment_4_2)*
		{ after(grammarAccess.getModuleAccess().getDefsAssignment_4_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Module__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModuleAccess().getENDTerminalRuleCall_4_3()); }
	RULE_END
	{ after(grammarAccess.getModuleAccess().getENDTerminalRuleCall_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PlugDsl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlugDsl__Group__0__Impl
	rule__PlugDsl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlugDsl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlugDslAccess().getPlugDslKeyword_0()); }
	PlugDsl
	{ after(grammarAccess.getPlugDslAccess().getPlugDslKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlugDsl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlugDsl__Group__1__Impl
	rule__PlugDsl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlugDsl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlugDslAccess().getNameAssignment_1()); }
	(rule__PlugDsl__NameAssignment_1)
	{ after(grammarAccess.getPlugDslAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlugDsl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PlugDsl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlugDsl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPlugDslAccess().getAdaptorAssignment_2()); }
	(rule__PlugDsl__AdaptorAssignment_2)
	{ after(grammarAccess.getPlugDslAccess().getAdaptorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportOperation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportOperation__Group__0__Impl
	rule__ImportOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportOperation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportOperationAccess().getNameAssignment_0()); }
	(rule__ImportOperation__NameAssignment_0)
	{ after(grammarAccess.getImportOperationAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportOperation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportOperation__Group__1__Impl
	rule__ImportOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportOperation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportOperationAccess().getFromKeyword_1()); }
	From
	{ after(grammarAccess.getImportOperationAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportOperation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportOperation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportOperation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportOperationAccess().getModuleAssignment_2()); }
	(rule__ImportOperation__ModuleAssignment_2)
	{ after(grammarAccess.getImportOperationAccess().getModuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDefinition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDefinition__Group__0__Impl
	rule__ImportDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDefinitionAccess().getGroup_0()); }
	(rule__ImportDefinition__Group_0__0)
	{ after(grammarAccess.getImportDefinitionAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDefinition__Group__1__Impl
	rule__ImportDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDefinitionAccess().getFromKeyword_1()); }
	From
	{ after(grammarAccess.getImportDefinitionAccess().getFromKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDefinition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDefinitionAccess().getModuleAssignment_2()); }
	(rule__ImportDefinition__ModuleAssignment_2)
	{ after(grammarAccess.getImportDefinitionAccess().getModuleAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDefinition__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDefinition__Group_0__0__Impl
	rule__ImportDefinition__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDefinitionAccess().getDefsAssignment_0_0()); }
	(rule__ImportDefinition__DefsAssignment_0_0)
	{ after(grammarAccess.getImportDefinitionAccess().getDefsAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDefinition__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDefinitionAccess().getGroup_0_1()); }
	(rule__ImportDefinition__Group_0_1__0)*
	{ after(grammarAccess.getImportDefinitionAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDefinition__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDefinition__Group_0_1__0__Impl
	rule__ImportDefinition__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDefinitionAccess().getCommaKeyword_0_1_0()); }
	Comma
	{ after(grammarAccess.getImportDefinitionAccess().getCommaKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDefinition__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDefinitionAccess().getDefsAssignment_0_1_1()); }
	(rule__ImportDefinition__DefsAssignment_0_1_1)
	{ after(grammarAccess.getImportDefinitionAccess().getDefsAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group_0__0__Impl
	rule__ExternalDef__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getRefAssignment_0_0()); }
	(rule__ExternalDef__RefAssignment_0_0)
	{ after(grammarAccess.getExternalDefAccess().getRefAssignment_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getGroup_0_1()); }
	(rule__ExternalDef__Group_0_1__0)?
	{ after(grammarAccess.getExternalDefAccess().getGroup_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalDef__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group_0_1__0__Impl
	rule__ExternalDef__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getAsKeyword_0_1_0()); }
	As
	{ after(grammarAccess.getExternalDefAccess().getAsKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalDef__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalDefAccess().getNameAssignment_0_1_1()); }
	(rule__ExternalDef__NameAssignment_0_1_1)
	{ after(grammarAccess.getExternalDefAccess().getNameAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ExternalModule__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalModule__Group_1__0__Impl
	rule__ExternalModule__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalModule__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalModuleAccess().getJavaRefAssignment_1_0()); }
	(rule__ExternalModule__JavaRefAssignment_1_0)
	{ after(grammarAccess.getExternalModuleAccess().getJavaRefAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalModule__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ExternalModule__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalModule__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExternalModuleAccess().getAsteriskKeyword_1_1()); }
	Asterisk
	{ after(grammarAccess.getExternalModuleAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SubPath__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubPath__Group__0__Impl
	rule__SubPath__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubPathAccess().getDefKeyword_0()); }
	Def
	{ after(grammarAccess.getSubPathAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubPath__Group__1__Impl
	rule__SubPath__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubPathAccess().getNameAssignment_1()); }
	(rule__SubPath__NameAssignment_1)
	{ after(grammarAccess.getSubPathAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubPath__Group__2__Impl
	rule__SubPath__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubPathAccess().getBEGINTerminalRuleCall_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getSubPathAccess().getBEGINTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubPath__Group__3__Impl
	rule__SubPath__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSubPathAccess().getOpersAssignment_3()); }
		(rule__SubPath__OpersAssignment_3)
		{ after(grammarAccess.getSubPathAccess().getOpersAssignment_3()); }
	)
	(
		{ before(grammarAccess.getSubPathAccess().getOpersAssignment_3()); }
		(rule__SubPath__OpersAssignment_3)*
		{ after(grammarAccess.getSubPathAccess().getOpersAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SubPath__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSubPathAccess().getENDTerminalRuleCall_4()); }
	RULE_END
	{ after(grammarAccess.getSubPathAccess().getENDTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getDefKeyword_0()); }
	Def
	{ after(grammarAccess.getOperationAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getAlternatives_1()); }
	(rule__Operation__Alternatives_1)
	{ after(grammarAccess.getOperationAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getNameAssignment_2()); }
	(rule__Operation__NameAssignment_2)?
	{ after(grammarAccess.getOperationAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getParamAssignment_3()); }
	(rule__Operation__ParamAssignment_3)?
	{ after(grammarAccess.getOperationAccess().getParamAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getGroup_4()); }
	(rule__Operation__Group_4__0)?
	{ after(grammarAccess.getOperationAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getColonKeyword_5()); }
	Colon
	{ after(grammarAccess.getOperationAccess().getColonKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getBodyAssignment_6()); }
	(rule__Operation__BodyAssignment_6)
	{ after(grammarAccess.getOperationAccess().getBodyAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_4__0__Impl
	rule__Operation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
	HyphenMinusGreaterThanSign
	{ after(grammarAccess.getOperationAccess().getHyphenMinusGreaterThanSignKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Operation__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOperationAccess().getResultAssignment_4_1()); }
	(rule__Operation__ResultAssignment_4_1)
	{ after(grammarAccess.getOperationAccess().getResultAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlockExpression__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__0__Impl
	rule__BlockExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getBEGINTerminalRuleCall_0()); }
	RULE_BEGIN
	{ after(grammarAccess.getBlockExpressionAccess().getBEGINTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__1__Impl
	rule__BlockExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getBlockKeyword_1()); }
	Block
	{ after(grammarAccess.getBlockExpressionAccess().getBlockKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlockExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlockExpression__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlockExpressionAccess().getENDTerminalRuleCall_2()); }
	RULE_END
	{ after(grammarAccess.getBlockExpressionAccess().getENDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypedefKeyword_0()); }
	Typedef
	{ after(grammarAccess.getTypeDefAccess().getTypedefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
	rule__TypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
	(rule__TypeDef__NameAssignment_1)
	{ after(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getAlternatives_2()); }
	(rule__TypeDef__Alternatives_2)
	{ after(grammarAccess.getTypeDefAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_2_0__0__Impl
	rule__TypeDef__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getParserAssignment_2_0_0()); }
	(rule__TypeDef__ParserAssignment_2_0_0)
	{ after(grammarAccess.getTypeDefAccess().getParserAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group_2_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getCodeAssignment_2_0_1()); }
	(rule__TypeDef__CodeAssignment_2_0_1)
	{ after(grammarAccess.getTypeDefAccess().getCodeAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDef__Group__0__Impl
	rule__EnumDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefAccess().getEnumKeyword_0()); }
	Enum
	{ after(grammarAccess.getEnumDefAccess().getEnumKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDef__Group__1__Impl
	rule__EnumDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefAccess().getNameAssignment_1()); }
	(rule__EnumDef__NameAssignment_1)
	{ after(grammarAccess.getEnumDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDef__Group__2__Impl
	rule__EnumDef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefAccess().getTypeAssignment_2()); }
	(rule__EnumDef__TypeAssignment_2)
	{ after(grammarAccess.getEnumDefAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDef__Group__3__Impl
	rule__EnumDef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefAccess().getColonKeyword_3()); }
	Colon
	{ after(grammarAccess.getEnumDefAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDef__Group__4__Impl
	rule__EnumDef__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefAccess().getBEGINTerminalRuleCall_4()); }
	RULE_BEGIN
	{ after(grammarAccess.getEnumDefAccess().getBEGINTerminalRuleCall_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDef__Group__5__Impl
	rule__EnumDef__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getEnumDefAccess().getDefsAssignment_5()); }
		(rule__EnumDef__DefsAssignment_5)
		{ after(grammarAccess.getEnumDefAccess().getDefsAssignment_5()); }
	)
	(
		{ before(grammarAccess.getEnumDefAccess().getDefsAssignment_5()); }
		(rule__EnumDef__DefsAssignment_5)*
		{ after(grammarAccess.getEnumDefAccess().getDefsAssignment_5()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumDef__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumDefAccess().getENDTerminalRuleCall_6()); }
	RULE_END
	{ after(grammarAccess.getEnumDefAccess().getENDTerminalRuleCall_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumItemDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumItemDef__Group__0__Impl
	rule__EnumItemDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItemDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumItemDefAccess().getNameAssignment_0()); }
	(rule__EnumItemDef__NameAssignment_0)
	{ after(grammarAccess.getEnumItemDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItemDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumItemDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItemDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumItemDefAccess().getValueAssignment_1()); }
	(rule__EnumItemDef__ValueAssignment_1)
	{ after(grammarAccess.getEnumItemDefAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDef__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getGroup_0_0()); }
	(rule__MapDef__Group_0_0__0)
	{ after(grammarAccess.getMapDefAccess().getGroup_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDef__Group_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0__0__Impl
	rule__MapDef__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getMapDefAction_0_0_0()); }
	()
	{ after(grammarAccess.getMapDefAccess().getMapDefAction_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0__1__Impl
	rule__MapDef__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_0_0_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0__2__Impl
	rule__MapDef__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getGroup_0_0_2()); }
	(rule__MapDef__Group_0_0_2__0)?
	{ after(grammarAccess.getMapDefAccess().getGroup_0_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_0_0_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_0_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDef__Group_0_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0_2__0__Impl
	rule__MapDef__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getDefsAssignment_0_0_2_0()); }
	(rule__MapDef__DefsAssignment_0_0_2_0)
	{ after(grammarAccess.getMapDefAccess().getDefsAssignment_0_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getGroup_0_0_2_1()); }
	(rule__MapDef__Group_0_0_2_1__0)*
	{ after(grammarAccess.getMapDefAccess().getGroup_0_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDef__Group_0_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0_2_1__0__Impl
	rule__MapDef__Group_0_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getCommaKeyword_0_0_2_1_0()); }
	Comma
	{ after(grammarAccess.getMapDefAccess().getCommaKeyword_0_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_0_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_0_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getDefsAssignment_0_0_2_1_1()); }
	(rule__MapDef__DefsAssignment_0_0_2_1_1)
	{ after(grammarAccess.getMapDefAccess().getDefsAssignment_0_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDef__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1__0__Impl
	rule__MapDef__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getMapDefAction_1_0()); }
	()
	{ after(grammarAccess.getMapDefAccess().getMapDefAction_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1__1__Impl
	rule__MapDef__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_1_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1__2__Impl
	rule__MapDef__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getBEGINTerminalRuleCall_1_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getMapDefAccess().getBEGINTerminalRuleCall_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1__3__Impl
	rule__MapDef__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getGroup_1_3()); }
	(rule__MapDef__Group_1_3__0)?
	{ after(grammarAccess.getMapDefAccess().getGroup_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1__4__Impl
	rule__MapDef__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getENDTerminalRuleCall_1_4()); }
	RULE_END
	{ after(grammarAccess.getMapDefAccess().getENDTerminalRuleCall_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_1_5()); }
	RightCurlyBracket
	{ after(grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_1_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDef__Group_1_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1_3__0__Impl
	rule__MapDef__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getDefsAssignment_1_3_0()); }
	(rule__MapDef__DefsAssignment_1_3_0)
	{ after(grammarAccess.getMapDefAccess().getDefsAssignment_1_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getGroup_1_3_1()); }
	(rule__MapDef__Group_1_3_1__0)*
	{ after(grammarAccess.getMapDefAccess().getGroup_1_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapDef__Group_1_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1_3_1__0__Impl
	rule__MapDef__Group_1_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getBREAKParserRuleCall_1_3_1_0()); }
	ruleBREAK
	{ after(grammarAccess.getMapDefAccess().getBREAKParserRuleCall_1_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapDef__Group_1_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__Group_1_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapDefAccess().getDefsAssignment_1_3_1_1()); }
	(rule__MapDef__DefsAssignment_1_3_1_1)
	{ after(grammarAccess.getMapDefAccess().getDefsAssignment_1_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntryDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryDef__Group__0__Impl
	rule__MapEntryDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryDefAccess().getNameAssignment_0()); }
	(rule__MapEntryDef__NameAssignment_0)
	{ after(grammarAccess.getMapEntryDefAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryDef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryDefAccess().getAlternatives_1()); }
	(rule__MapEntryDef__Alternatives_1)
	{ after(grammarAccess.getMapEntryDefAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntryDef__Group_1_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryDef__Group_1_0__0__Impl
	rule__MapEntryDef__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryDefAccess().getOptAssignment_1_0_0()); }
	(rule__MapEntryDef__OptAssignment_1_0_0)?
	{ after(grammarAccess.getMapEntryDefAccess().getOptAssignment_1_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryDef__Group_1_0__1__Impl
	rule__MapEntryDef__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryDefAccess().getColonKeyword_1_0_1()); }
	Colon
	{ after(grammarAccess.getMapEntryDefAccess().getColonKeyword_1_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryDef__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryDefAccess().getTypeAssignment_1_0_2()); }
	(rule__MapEntryDef__TypeAssignment_1_0_2)
	{ after(grammarAccess.getMapEntryDefAccess().getTypeAssignment_1_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntryDef__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryDef__Group_1_1__0__Impl
	rule__MapEntryDef__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryDefAccess().getEqualsSignKeyword_1_1_0()); }
	EqualsSign
	{ after(grammarAccess.getMapEntryDefAccess().getEqualsSignKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryDef__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryDefAccess().getValueAssignment_1_1_1()); }
	(rule__MapEntryDef__ValueAssignment_1_1_1)
	{ after(grammarAccess.getMapEntryDefAccess().getValueAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__0__Impl
	rule__ListDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getListDefAction_0()); }
	()
	{ after(grammarAccess.getListDefAccess().getListDefAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__1__Impl
	rule__ListDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getFullStopFullStopKeyword_1()); }
	FullStopFullStop
	{ after(grammarAccess.getListDefAccess().getFullStopFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListDefAccess().getTypeAssignment_2()); }
	(rule__ListDef__TypeAssignment_2)
	{ after(grammarAccess.getListDefAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NullLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullLiteral__Group__0__Impl
	rule__NullLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
	()
	{ after(grammarAccess.getNullLiteralAccess().getNullLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NullLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
	Null
	{ after(grammarAccess.getNullLiteralAccess().getNullKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BoolLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolLiteral__Group__0__Impl
	rule__BoolLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0()); }
	()
	{ after(grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BoolLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoolLiteralAccess().getAlternatives_1()); }
	(rule__BoolLiteral__Alternatives_1)
	{ after(grammarAccess.getBoolLiteralAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateLiteral__Group__0__Impl
	rule__DateLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateLiteralAccess().getLdaKeyword_0()); }
	Lda_1
	{ after(grammarAccess.getDateLiteralAccess().getLdaKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateLiteralAccess().getValueAssignment_1()); }
	(rule__DateLiteral__ValueAssignment_1)
	{ after(grammarAccess.getDateLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TimeLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__0__Impl
	rule__TimeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getLtmKeyword_0()); }
	Ltm_1
	{ after(grammarAccess.getTimeLiteralAccess().getLtmKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TimeLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTimeLiteralAccess().getValueAssignment_1()); }
	(rule__TimeLiteral__ValueAssignment_1)
	{ after(grammarAccess.getTimeLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateTimeLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTimeLiteral__Group__0__Impl
	rule__DateTimeLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeLiteralAccess().getLdtKeyword_0()); }
	Ldt_1
	{ after(grammarAccess.getDateTimeLiteralAccess().getLdtKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateTimeLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateTimeLiteralAccess().getValueAssignment_1()); }
	(rule__DateTimeLiteral__ValueAssignment_1)
	{ after(grammarAccess.getDateTimeLiteralAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__0__Impl
	rule__ListLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
	()
	{ after(grammarAccess.getListLiteralAccess().getListLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__1__Impl
	rule__ListLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1()); }
	LeftSquareBracket
	{ after(grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__2__Impl
	rule__ListLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getGroup_2()); }
	(rule__ListLiteral__Group_2__0)?
	{ after(grammarAccess.getListLiteralAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3()); }
	RightSquareBracket
	{ after(grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2__0__Impl
	rule__ListLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getValsAssignment_2_0()); }
	(rule__ListLiteral__ValsAssignment_2_0)
	{ after(grammarAccess.getListLiteralAccess().getValsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getGroup_2_1()); }
	(rule__ListLiteral__Group_2_1__0)*
	{ after(grammarAccess.getListLiteralAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ListLiteral__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2_1__0__Impl
	rule__ListLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ListLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getListLiteralAccess().getValsAssignment_2_1_1()); }
	(rule__ListLiteral__ValsAssignment_2_1_1)
	{ after(grammarAccess.getListLiteralAccess().getValsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group__0__Impl
	rule__MapLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getMapLiteralAction_0()); }
	()
	{ after(grammarAccess.getMapLiteralAccess().getMapLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group__1__Impl
	rule__MapLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group__2__Impl
	rule__MapLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getGroup_2()); }
	(rule__MapLiteral__Group_2__0)?
	{ after(grammarAccess.getMapLiteralAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteral__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_2__0__Impl
	rule__MapLiteral__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getEntriesAssignment_2_0()); }
	(rule__MapLiteral__EntriesAssignment_2_0)
	{ after(grammarAccess.getMapLiteralAccess().getEntriesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getGroup_2_1()); }
	(rule__MapLiteral__Group_2_1__0)*
	{ after(grammarAccess.getMapLiteralAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapLiteral__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_2_1__0__Impl
	rule__MapLiteral__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getCommaKeyword_2_1_0()); }
	Comma
	{ after(grammarAccess.getMapLiteralAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapLiteral__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapLiteralAccess().getEntriesAssignment_2_1_1()); }
	(rule__MapLiteral__EntriesAssignment_2_1_1)
	{ after(grammarAccess.getMapLiteralAccess().getEntriesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MapEntryLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryLiteral__Group__0__Impl
	rule__MapEntryLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryLiteralAccess().getNameAssignment_0()); }
	(rule__MapEntryLiteral__NameAssignment_0)
	{ after(grammarAccess.getMapEntryLiteralAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryLiteral__Group__1__Impl
	rule__MapEntryLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryLiteralAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getMapEntryLiteralAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MapEntryLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMapEntryLiteralAccess().getValueAssignment_2()); }
	(rule__MapEntryLiteral__ValueAssignment_2)
	{ after(grammarAccess.getMapEntryLiteralAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EnumLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteral__Group__0__Impl
	rule__EnumLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralAccess().getEnumLiteralAction_0()); }
	()
	{ after(grammarAccess.getEnumLiteralAccess().getEnumLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EnumLiteral__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEnumLiteralAccess().getRefAssignment_1()); }
	(rule__EnumLiteral__RefAssignment_1)
	{ after(grammarAccess.getEnumLiteralAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternLiteral__Group__0__Impl
	rule__PatternLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternLiteralAccess().getPatternLiteralAction_0()); }
	()
	{ after(grammarAccess.getPatternLiteralAccess().getPatternLiteralAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternLiteral__Group__1__Impl
	rule__PatternLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternLiteralAccess().getRefAssignment_1()); }
	(rule__PatternLiteral__RefAssignment_1)?
	{ after(grammarAccess.getPatternLiteralAccess().getRefAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternLiteral__Group__2__Impl
	rule__PatternLiteral__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternLiteralAccess().getCommercialAtKeyword_2()); }
	CommercialAt
	{ after(grammarAccess.getPatternLiteralAccess().getCommercialAtKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternLiteral__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternLiteralAccess().getTEXTTerminalRuleCall_3()); }
	RULE_TEXT
	{ after(grammarAccess.getPatternLiteralAccess().getTEXTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Path__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__0__Impl
	rule__Path__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getPIDTerminalRuleCall_0()); }
	RULE_PID
	{ after(grammarAccess.getPathAccess().getPIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Path__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Path__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPathAccess().getPIDTerminalRuleCall_1()); }
	(RULE_PID)*
	{ after(grammarAccess.getPathAccess().getPIDTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameInStaticImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameInStaticImport__Group__0__Impl
	rule__QualifiedNameInStaticImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedNameInStaticImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameInStaticImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }
	FullStop
	{ after(grammarAccess.getQualifiedNameInStaticImportAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getNamePathParserRuleCall_1_0()); }
		rulePath
		{ after(grammarAccess.getModuleAccess().getNamePathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ImportsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_2_0()); }
		ruleImport
		{ after(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__PlugsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getPlugsPlugDslParserRuleCall_3_0()); }
		rulePlugDsl
		{ after(grammarAccess.getModuleAccess().getPlugsPlugDslParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__DefsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getDefsDefinitionParserRuleCall_4_2_0()); }
		ruleDefinition
		{ after(grammarAccess.getModuleAccess().getDefsDefinitionParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__OpersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getOpersOperationParserRuleCall_5_0()); }
		ruleOperation
		{ after(grammarAccess.getModuleAccess().getOpersOperationParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__PathsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModuleAccess().getPathsSubPathParserRuleCall_6_0()); }
		ruleSubPath
		{ after(grammarAccess.getModuleAccess().getPathsSubPathParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlugDsl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlugDslAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getPlugDslAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PlugDsl__AdaptorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPlugDslAccess().getAdaptorPatternLiteralParserRuleCall_2_0()); }
		rulePatternLiteral
		{ after(grammarAccess.getPlugDslAccess().getAdaptorPatternLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportOperation__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportOperationAccess().getNamePathParserRuleCall_0_0()); }
		rulePath
		{ after(grammarAccess.getImportOperationAccess().getNamePathParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportOperation__ModuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportOperationAccess().getModuleExternalModuleParserRuleCall_2_0()); }
		ruleExternalModule
		{ after(grammarAccess.getImportOperationAccess().getModuleExternalModuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__DefsAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_0_0()); }
		ruleExternalDef
		{ after(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__DefsAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_1_1_0()); }
		ruleExternalDef
		{ after(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDefinition__ModuleAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDefinitionAccess().getModuleExternalModuleParserRuleCall_2_0()); }
		ruleExternalModule
		{ after(grammarAccess.getImportDefinitionAccess().getModuleExternalModuleParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__RefAssignment_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefAccess().getRefIDTerminalRuleCall_0_0_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalDefAccess().getRefIDTerminalRuleCall_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__NameAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalModule__RefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalModuleAccess().getRefPathParserRuleCall_0_0()); }
		rulePath
		{ after(grammarAccess.getExternalModuleAccess().getRefPathParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalModule__JavaRefAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExternalModuleAccess().getJavaRefJvmDeclaredTypeCrossReference_1_0_0()); }
		(
			{ before(grammarAccess.getExternalModuleAccess().getJavaRefJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_0_1()); }
			ruleQualifiedNameInStaticImport
			{ after(grammarAccess.getExternalModuleAccess().getJavaRefJvmDeclaredTypeQualifiedNameInStaticImportParserRuleCall_1_0_0_1()); }
		)
		{ after(grammarAccess.getExternalModuleAccess().getJavaRefJvmDeclaredTypeCrossReference_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubPathAccess().getNamePathParserRuleCall_1_0()); }
		rulePath
		{ after(grammarAccess.getSubPathAccess().getNamePathParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SubPath__OpersAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSubPathAccess().getOpersOperationParserRuleCall_3_0()); }
		ruleOperation
		{ after(grammarAccess.getSubPathAccess().getOpersOperationParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__IsGetAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getIsGetGetKeyword_1_0_0()); }
		(
			{ before(grammarAccess.getOperationAccess().getIsGetGetKeyword_1_0_0()); }
			Get
			{ after(grammarAccess.getOperationAccess().getIsGetGetKeyword_1_0_0()); }
		)
		{ after(grammarAccess.getOperationAccess().getIsGetGetKeyword_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getNamePathParserRuleCall_2_0()); }
		rulePath
		{ after(grammarAccess.getOperationAccess().getNamePathParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParamAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getParamParamDefParserRuleCall_3_0()); }
		ruleParamDef
		{ after(grammarAccess.getOperationAccess().getParamParamDefParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ResultAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getResultElementTypeDefParserRuleCall_4_1_0()); }
		ruleElementTypeDef
		{ after(grammarAccess.getOperationAccess().getResultElementTypeDefParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__BodyAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperationAccess().getBodyBlockExpressionParserRuleCall_6_0()); }
		ruleBlockExpression
		{ after(grammarAccess.getOperationAccess().getBodyBlockExpressionParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDef__DefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamDefAccess().getDefMapDefParserRuleCall_0_0()); }
		ruleMapDef
		{ after(grammarAccess.getParamDefAccess().getDefMapDefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParamDef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParamDefAccess().getRefMapDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getParamDefAccess().getRefMapDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getParamDefAccess().getRefMapDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getParamDefAccess().getRefMapDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__ParserAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getParserAlternatives_2_0_0_0()); }
		(rule__TypeDef__ParserAlternatives_2_0_0_0)
		{ after(grammarAccess.getTypeDefAccess().getParserAlternatives_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__CodeAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getCodeTEXTTerminalRuleCall_2_0_1_0()); }
		RULE_TEXT
		{ after(grammarAccess.getTypeDefAccess().getCodeTEXTTerminalRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__TypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getTypeValueDefParserRuleCall_2_1_0()); }
		ruleValueDef
		{ after(grammarAccess.getTypeDefAccess().getTypeValueDefParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefAccess().getTypeMapDefParserRuleCall_2_0()); }
		ruleMapDef
		{ after(grammarAccess.getEnumDefAccess().getTypeMapDefParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumDef__DefsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumDefAccess().getDefsEnumItemDefParserRuleCall_5_0()); }
		ruleEnumItemDef
		{ after(grammarAccess.getEnumDefAccess().getDefsEnumItemDefParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItemDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumItemDefAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEnumItemDefAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumItemDef__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumItemDefAccess().getValueMapLiteralParserRuleCall_1_0()); }
		ruleMapLiteral
		{ after(grammarAccess.getEnumItemDefAccess().getValueMapLiteralParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElementTypeDef__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementTypeDefAccess().getRefDefinitionCrossReference_1_0()); }
		(
			{ before(grammarAccess.getElementTypeDefAccess().getRefDefinitionIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getElementTypeDefAccess().getRefDefinitionIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getElementTypeDefAccess().getRefDefinitionCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueDef__NativeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueDefAccess().getNativeNativeDefParserRuleCall_0_0()); }
		ruleNativeDef
		{ after(grammarAccess.getValueDefAccess().getNativeNativeDefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__DefsAssignment_0_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_0_0()); }
		ruleMapEntryDef
		{ after(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__DefsAssignment_0_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_1_1_0()); }
		ruleMapEntryDef
		{ after(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__DefsAssignment_1_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_0_0()); }
		ruleMapEntryDef
		{ after(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapDef__DefsAssignment_1_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_1_1_0()); }
		ruleMapEntryDef
		{ after(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryDefAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMapEntryDefAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__OptAssignment_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryDefAccess().getOptQuestionMarkKeyword_1_0_0_0()); }
		(
			{ before(grammarAccess.getMapEntryDefAccess().getOptQuestionMarkKeyword_1_0_0_0()); }
			QuestionMark
			{ after(grammarAccess.getMapEntryDefAccess().getOptQuestionMarkKeyword_1_0_0_0()); }
		)
		{ after(grammarAccess.getMapEntryDefAccess().getOptQuestionMarkKeyword_1_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__TypeAssignment_1_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryDefAccess().getTypeElementTypeDefParserRuleCall_1_0_2_0()); }
		ruleElementTypeDef
		{ after(grammarAccess.getMapEntryDefAccess().getTypeElementTypeDefParserRuleCall_1_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryDef__ValueAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryDefAccess().getValueLiteralParserRuleCall_1_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getMapEntryDefAccess().getValueLiteralParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListDef__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListDefAccess().getTypeElementTypeDefParserRuleCall_2_0()); }
		ruleElementTypeDef
		{ after(grammarAccess.getListDefAccess().getTypeElementTypeDefParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__PathAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLiteralAccess().getPathPathParserRuleCall_12_0()); }
		rulePath
		{ after(grammarAccess.getLiteralAccess().getPathPathParserRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BoolLiteral__IsTrueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoolLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
		(
			{ before(grammarAccess.getBoolLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
			True
			{ after(grammarAccess.getBoolLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
		)
		{ after(grammarAccess.getBoolLiteralAccess().getIsTrueTrueKeyword_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StrLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStrLiteralAccess().getValueTEXTTerminalRuleCall_0()); }
		RULE_TEXT
		{ after(grammarAccess.getStrLiteralAccess().getValueTEXTTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntLiteralAccess().getValueNATURALTerminalRuleCall_0()); }
		RULE_NATURAL
		{ after(grammarAccess.getIntLiteralAccess().getValueNATURALTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FltLiteral__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFltLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
		RULE_FLOAT
		{ after(grammarAccess.getFltLiteralAccess().getValueFLOATTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateLiteralAccess().getValueTEXTTerminalRuleCall_1_0()); }
		RULE_TEXT
		{ after(grammarAccess.getDateLiteralAccess().getValueTEXTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeLiteralAccess().getValueTEXTTerminalRuleCall_1_0()); }
		RULE_TEXT
		{ after(grammarAccess.getTimeLiteralAccess().getValueTEXTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTimeLiteral__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTimeLiteralAccess().getValueTEXTTerminalRuleCall_1_0()); }
		RULE_TEXT
		{ after(grammarAccess.getDateTimeLiteralAccess().getValueTEXTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ValsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_0_0()); }
		ruleLiteral
		{ after(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ListLiteral__ValsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_1_1_0()); }
		ruleLiteral
		{ after(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__EntriesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_2_0_0()); }
		ruleMapEntryLiteral
		{ after(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapLiteral__EntriesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_2_1_1_0()); }
		ruleMapEntryLiteral
		{ after(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryLiteral__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryLiteralAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getMapEntryLiteralAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MapEntryLiteral__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMapEntryLiteralAccess().getValueLiteralParserRuleCall_2_0()); }
		ruleLiteral
		{ after(grammarAccess.getMapEntryLiteralAccess().getValueLiteralParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumLiteral__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEnumLiteralAccess().getRefEnumItemDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getEnumLiteralAccess().getRefEnumItemDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getEnumLiteralAccess().getRefEnumItemDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getEnumLiteralAccess().getRefEnumItemDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternLiteral__RefAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPatternLiteralAccess().getRefValueDefCrossReference_1_0()); }
		(
			{ before(grammarAccess.getPatternLiteralAccess().getRefValueDefIDTerminalRuleCall_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getPatternLiteralAccess().getRefValueDefIDTerminalRuleCall_1_0_1()); }
		)
		{ after(grammarAccess.getPatternLiteralAccess().getRefValueDefCrossReference_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
