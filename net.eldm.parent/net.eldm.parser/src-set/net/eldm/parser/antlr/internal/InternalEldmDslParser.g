/*
 * generated by Xtext 2.15.0
 */
parser grammar InternalEldmDslParser;

options {
	tokenVocab=InternalEldmDslLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package net.eldm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import net.eldm.services.EldmDslGrammarAccess;

}

@members {

 	private EldmDslGrammarAccess grammarAccess;

    public InternalEldmDslParser(TokenStream input, EldmDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Module";
   	}

   	@Override
   	protected EldmDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Module
		{
			newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getModuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getNamePathLiteralParserRuleCall_1_0());
				}
				lv_name_1_0=rulePathLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.PathLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_2_0());
				}
				lv_imports_2_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"imports",
						lv_imports_2_0,
						"net.eldm.EldmDsl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getPlugsPlugDslParserRuleCall_3_0());
				}
				lv_plugs_3_0=rulePlugDsl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"plugs",
						lv_plugs_3_0,
						"net.eldm.EldmDsl.PlugDsl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4=Definitions
			{
				newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getDefinitionsKeyword_4_0());
			}
			this_BEGIN_5=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_5, grammarAccess.getModuleAccess().getBEGINTerminalRuleCall_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getDefsDefinitionParserRuleCall_4_2_0());
					}
					lv_defs_6_0=ruleDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"defs",
							lv_defs_6_0,
							"net.eldm.EldmDsl.Definition");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getValDefsLetParserRuleCall_4_3_0());
					}
					lv_valDefs_7_0=ruleLet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"valDefs",
							lv_valDefs_7_0,
							"net.eldm.EldmDsl.Let");
						afterParserOrEnumRuleCall();
					}
				)
			)*
			this_END_8=RULE_END
			{
				newLeafNode(this_END_8, grammarAccess.getModuleAccess().getENDTerminalRuleCall_4_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getOpersOperationParserRuleCall_5_0());
				}
				lv_opers_9_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"opers",
						lv_opers_9_0,
						"net.eldm.EldmDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getPathsSubPathParserRuleCall_6_0());
				}
				lv_paths_10_0=ruleSubPath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"paths",
						lv_paths_10_0,
						"net.eldm.EldmDsl.SubPath");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePlugDsl
entryRulePlugDsl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlugDslRule()); }
	iv_rulePlugDsl=rulePlugDsl
	{ $current=$iv_rulePlugDsl.current; }
	EOF;

// Rule PlugDsl
rulePlugDsl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=PlugDsl
		{
			newLeafNode(otherlv_0, grammarAccess.getPlugDslAccess().getPlugDslKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPlugDslAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlugDslRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPlugDslAccess().getAdaptorPatternLiteralParserRuleCall_2_0());
				}
				lv_adaptor_2_0=rulePatternLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlugDslRule());
					}
					set(
						$current,
						"adaptor",
						lv_adaptor_2_0,
						"net.eldm.EldmDsl.PatternLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImportAccess().getImportOperationParserRuleCall_0());
		}
		this_ImportOperation_0=ruleImportOperation
		{
			$current = $this_ImportOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImportAccess().getImportDefinitionParserRuleCall_1());
		}
		this_ImportDefinition_1=ruleImportDefinition
		{
			$current = $this_ImportDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImportOperation
entryRuleImportOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportOperationRule()); }
	iv_ruleImportOperation=ruleImportOperation
	{ $current=$iv_ruleImportOperation.current; }
	EOF;

// Rule ImportOperation
ruleImportOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImportOperationAccess().getNamePathLiteralParserRuleCall_0_0());
				}
				lv_name_0_0=rulePathLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportOperationRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.PathLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=From
		{
			newLeafNode(otherlv_1, grammarAccess.getImportOperationAccess().getFromKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportOperationAccess().getRefPathLiteralParserRuleCall_2_0());
				}
				lv_ref_2_0=rulePathLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportOperationRule());
					}
					set(
						$current,
						"ref",
						lv_ref_2_0,
						"net.eldm.EldmDsl.PathLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportDefinition
entryRuleImportDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDefinitionRule()); }
	iv_ruleImportDefinition=ruleImportDefinition
	{ $current=$iv_ruleImportDefinition.current; }
	EOF;

// Rule ImportDefinition
ruleImportDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_0_0());
					}
					lv_defs_0_0=ruleExternalDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
						}
						add(
							$current,
							"defs",
							lv_defs_0_0,
							"net.eldm.EldmDsl.ExternalDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=Comma
				{
					newLeafNode(otherlv_1, grammarAccess.getImportDefinitionAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_1_1_0());
						}
						lv_defs_2_0=ruleExternalDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
							}
							add(
								$current,
								"defs",
								lv_defs_2_0,
								"net.eldm.EldmDsl.ExternalDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_3=From
		{
			newLeafNode(otherlv_3, grammarAccess.getImportDefinitionAccess().getFromKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportDefinitionAccess().getRefPathLiteralParserRuleCall_2_0());
				}
				lv_ref_4_0=rulePathLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
					}
					set(
						$current,
						"ref",
						lv_ref_4_0,
						"net.eldm.EldmDsl.PathLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExternalDef
entryRuleExternalDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalDefRule()); }
	iv_ruleExternalDef=ruleExternalDef
	{ $current=$iv_ruleExternalDef.current; }
	EOF;

// Rule ExternalDef
ruleExternalDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_ref_0_0=RULE_ID
					{
						newLeafNode(lv_ref_0_0, grammarAccess.getExternalDefAccess().getRefIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExternalDefRule());
						}
						setWithLastConsumed(
							$current,
							"ref",
							lv_ref_0_0,
							"net.eldm.EldmDsl.ID");
					}
				)
			)
			(
				otherlv_1=As
				{
					newLeafNode(otherlv_1, grammarAccess.getExternalDefAccess().getAsKeyword_0_1_0());
				}
				(
					(
						lv_name_2_0=RULE_ID
						{
							newLeafNode(lv_name_2_0, grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExternalDefRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_0,
								"net.eldm.EldmDsl.ID");
						}
					)
				)
			)?
		)
		    |
		(
			((
				RULE_ID
			)
			)=>
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_isPrivate_0_0=Private
				{
					newLeafNode(lv_isPrivate_0_0, grammarAccess.getOperationAccess().getIsPrivatePrivateKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOperationRule());
					}
					setWithLastConsumed($current, "isPrivate", true, "private");
				}
			)
		)?
		otherlv_1=Def
		{
			newLeafNode(otherlv_1, grammarAccess.getOperationAccess().getDefKeyword_1());
		}
		(
			(
				(
					lv_isGet_2_0=Get
					{
						newLeafNode(lv_isGet_2_0, grammarAccess.getOperationAccess().getIsGetGetKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "isGet", true, "get");
					}
				)
			)
			    |
			otherlv_3=Set
			{
				newLeafNode(otherlv_3, grammarAccess.getOperationAccess().getSetKeyword_2_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getNamePathLiteralParserRuleCall_3_0());
				}
				lv_name_4_0=rulePathLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"name",
						lv_name_4_0,
						"net.eldm.EldmDsl.PathLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getParamParamDefParserRuleCall_4_0());
				}
				lv_param_5_0=ruleParamDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"param",
						lv_param_5_0,
						"net.eldm.EldmDsl.ParamDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_6=HyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_6, grammarAccess.getOperationAccess().getHyphenMinusGreaterThanSignKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getResultElementDefParserRuleCall_5_1_0());
					}
					lv_result_7_0=ruleElementDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						set(
							$current,
							"result",
							lv_result_7_0,
							"net.eldm.EldmDsl.ElementDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_8=Colon
		{
			newLeafNode(otherlv_8, grammarAccess.getOperationAccess().getColonKeyword_6());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getBodyBlockExpressionParserRuleCall_7_0());
				}
				lv_body_9_0=ruleBlockExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"body",
						lv_body_9_0,
						"net.eldm.EldmDsl.BlockExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParamDef
entryRuleParamDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamDefRule()); }
	iv_ruleParamDef=ruleParamDef
	{ $current=$iv_ruleParamDef.current; }
	EOF;

// Rule ParamDef
ruleParamDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParamDefAccess().getDefMapDefParserRuleCall_0_0());
				}
				lv_def_0_0=ruleMapDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamDefRule());
					}
					set(
						$current,
						"def",
						lv_def_0_0,
						"net.eldm.EldmDsl.MapDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamDefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getParamDefAccess().getRefMapDefCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSubPath
entryRuleSubPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubPathRule()); }
	iv_ruleSubPath=ruleSubPath
	{ $current=$iv_ruleSubPath.current; }
	EOF;

// Rule SubPath
ruleSubPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Def
		{
			newLeafNode(otherlv_0, grammarAccess.getSubPathAccess().getDefKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubPathAccess().getNamePathLiteralParserRuleCall_1_0());
				}
				lv_name_1_0=rulePathLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubPathRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.PathLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getSubPathAccess().getBEGINTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubPathAccess().getOpersOperationParserRuleCall_3_0());
				}
				lv_opers_3_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubPathRule());
					}
					add(
						$current,
						"opers",
						lv_opers_3_0,
						"net.eldm.EldmDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getSubPathAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleBlockExpression
entryRuleBlockExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockExpressionRule()); }
	iv_ruleBlockExpression=ruleBlockExpression
	{ $current=$iv_ruleBlockExpression.current; }
	EOF;

// Rule BlockExpression
ruleBlockExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockExpressionAccess().getBlockExpressionAction_0(),
					$current);
			}
		)
		this_BEGIN_1=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_1, grammarAccess.getBlockExpressionAccess().getBEGINTerminalRuleCall_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBlockExpressionAccess().getExpressionsExpressionParserRuleCall_2_0());
				}
				lv_expressions_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBlockExpressionRule());
					}
					add(
						$current,
						"expressions",
						lv_expressions_2_0,
						"net.eldm.EldmDsl.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		this_END_3=RULE_END
		{
			newLeafNode(this_END_3, grammarAccess.getBlockExpressionAccess().getENDTerminalRuleCall_3());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getExpressionAccess().getLetParserRuleCall());
	}
	this_Let_0=ruleLet
	{
		$current = $this_Let_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleLet
entryRuleLet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLetRule()); }
	iv_ruleLet=ruleLet
	{ $current=$iv_ruleLet.current; }
	EOF;

// Rule Let
ruleLet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getLetAccess().getLetAction_0(),
					$current);
			}
		)
		otherlv_1=Let
		{
			newLeafNode(otherlv_1, grammarAccess.getLetAccess().getLetKeyword_1());
		}
		(
			(
				lv_name_2_0=RULE_ID
				{
					newLeafNode(lv_name_2_0, grammarAccess.getLetAccess().getNameIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLetRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_2_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		otherlv_3=EqualsSign
		{
			newLeafNode(otherlv_3, grammarAccess.getLetAccess().getEqualsSignKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLetAccess().getResultResultExpressionParserRuleCall_4_0());
				}
				lv_result_4_0=ruleResultExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLetRule());
					}
					set(
						$current,
						"result",
						lv_result_4_0,
						"net.eldm.EldmDsl.ResultExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleResultExpression
entryRuleResultExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getResultExpressionRule()); }
	iv_ruleResultExpression=ruleResultExpression
	{ $current=$iv_ruleResultExpression.current; }
	EOF;

// Rule ResultExpression
ruleResultExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getResultExpressionAccess().getOrExpressionParserRuleCall());
	}
	this_OrExpression_0=ruleOrExpression
	{
		$current = $this_OrExpression_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleOrExpression
entryRuleOrExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrExpressionRule()); }
	iv_ruleOrExpression=ruleOrExpression
	{ $current=$iv_ruleOrExpression.current; }
	EOF;

// Rule OrExpression
ruleOrExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0());
		}
		this_AndExpression_0=ruleAndExpression
		{
			$current = $this_AndExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							VerticalLine
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getOrExpressionAccess().getResultExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_feature_2_0=VerticalLine
							{
								newLeafNode(lv_feature_2_0, grammarAccess.getOrExpressionAccess().getFeatureVerticalLineKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getOrExpressionRule());
								}
								setWithLastConsumed($current, "feature", lv_feature_2_0, "|");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getOrExpressionAccess().getRightOrExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleOrExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"net.eldm.EldmDsl.OrExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleAndExpression
entryRuleAndExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndExpressionRule()); }
	iv_ruleAndExpression=ruleAndExpression
	{ $current=$iv_ruleAndExpression.current; }
	EOF;

// Rule AndExpression
ruleAndExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndExpressionAccess().getEqualityExpressionParserRuleCall_0());
		}
		this_EqualityExpression_0=ruleEqualityExpression
		{
			$current = $this_EqualityExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							Ampersand
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAndExpressionAccess().getResultExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							lv_feature_2_0=Ampersand
							{
								newLeafNode(lv_feature_2_0, grammarAccess.getAndExpressionAccess().getFeatureAmpersandKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getAndExpressionRule());
								}
								setWithLastConsumed($current, "feature", lv_feature_2_0, "&");
							}
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAndExpressionAccess().getRightEqualityExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleEqualityExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"net.eldm.EldmDsl.EqualityExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleEqualityExpression
entryRuleEqualityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEqualityExpressionRule()); }
	iv_ruleEqualityExpression=ruleEqualityExpression
	{ $current=$iv_ruleEqualityExpression.current; }
	EOF;

// Rule EqualityExpression
ruleEqualityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRelationalExpressionParserRuleCall_0());
		}
		this_RelationalExpression_0=ruleRelationalExpression
		{
			$current = $this_RelationalExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								EqualsSignEqualsSign
								    |
								ExclamationMarkEqualsSign
							)
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getEqualityExpressionAccess().getResultExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_feature_2_1=EqualsSignEqualsSign
								{
									newLeafNode(lv_feature_2_1, grammarAccess.getEqualityExpressionAccess().getFeatureEqualsSignEqualsSignKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getEqualityExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_1, null);
								}
								    |
								lv_feature_2_2=ExclamationMarkEqualsSign
								{
									newLeafNode(lv_feature_2_2, grammarAccess.getEqualityExpressionAccess().getFeatureExclamationMarkEqualsSignKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getEqualityExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_2, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getEqualityExpressionAccess().getRightRelationalExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleRelationalExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEqualityExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"net.eldm.EldmDsl.RelationalExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleRelationalExpression
entryRuleRelationalExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalExpressionRule()); }
	iv_ruleRelationalExpression=ruleRelationalExpression
	{ $current=$iv_ruleRelationalExpression.current; }
	EOF;

// Rule RelationalExpression
ruleRelationalExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getRelationalExpressionAccess().getAdditiveExpressionParserRuleCall_0());
		}
		this_AdditiveExpression_0=ruleAdditiveExpression
		{
			$current = $this_AdditiveExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					((
						(
						)
						Is
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getRelationalExpressionAccess().getInstanceOfExpressionExpressionAction_1_0_0_0_0(),
									$current);
							}
						)
						otherlv_2=Is
						{
							newLeafNode(otherlv_2, grammarAccess.getRelationalExpressionAccess().getIsKeyword_1_0_0_0_1());
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getTypeElementDefParserRuleCall_1_0_1_0());
						}
						lv_type_3_0=ruleElementDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"type",
								lv_type_3_0,
								"net.eldm.EldmDsl.ElementDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					((
						(
						)
						(
							(
								(
									GreaterThanSignEqualsSign
									    |
									LessThanSignEqualsSign
									    |
									GreaterThanSign
									    |
									LessThanSign
								)
							)
						)
					)
					)=>
					(
						(
							{
								$current = forceCreateModelElementAndSet(
									grammarAccess.getRelationalExpressionAccess().getResultExpressionLeftAction_1_1_0_0_0(),
									$current);
							}
						)
						(
							(
								(
									lv_feature_5_1=GreaterThanSignEqualsSign
									{
										newLeafNode(lv_feature_5_1, grammarAccess.getRelationalExpressionAccess().getFeatureGreaterThanSignEqualsSignKeyword_1_1_0_0_1_0_0());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getRelationalExpressionRule());
										}
										setWithLastConsumed($current, "feature", lv_feature_5_1, null);
									}
									    |
									lv_feature_5_2=LessThanSignEqualsSign
									{
										newLeafNode(lv_feature_5_2, grammarAccess.getRelationalExpressionAccess().getFeatureLessThanSignEqualsSignKeyword_1_1_0_0_1_0_1());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getRelationalExpressionRule());
										}
										setWithLastConsumed($current, "feature", lv_feature_5_2, null);
									}
									    |
									lv_feature_5_3=GreaterThanSign
									{
										newLeafNode(lv_feature_5_3, grammarAccess.getRelationalExpressionAccess().getFeatureGreaterThanSignKeyword_1_1_0_0_1_0_2());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getRelationalExpressionRule());
										}
										setWithLastConsumed($current, "feature", lv_feature_5_3, null);
									}
									    |
									lv_feature_5_4=LessThanSign
									{
										newLeafNode(lv_feature_5_4, grammarAccess.getRelationalExpressionAccess().getFeatureLessThanSignKeyword_1_1_0_0_1_0_3());
									}
									{
										if ($current==null) {
											$current = createModelElement(grammarAccess.getRelationalExpressionRule());
										}
										setWithLastConsumed($current, "feature", lv_feature_5_4, null);
									}
								)
							)
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getRelationalExpressionAccess().getRightAdditiveExpressionParserRuleCall_1_1_1_0());
						}
						lv_right_6_0=ruleAdditiveExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRelationalExpressionRule());
							}
							set(
								$current,
								"right",
								lv_right_6_0,
								"net.eldm.EldmDsl.AdditiveExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleAdditiveExpression
entryRuleAdditiveExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAdditiveExpressionRule()); }
	iv_ruleAdditiveExpression=ruleAdditiveExpression
	{ $current=$iv_ruleAdditiveExpression.current; }
	EOF;

// Rule AdditiveExpression
ruleAdditiveExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getMultiplicativeExpressionParserRuleCall_0());
		}
		this_MultiplicativeExpression_0=ruleMultiplicativeExpression
		{
			$current = $this_MultiplicativeExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								PlusSign
								    |
								HyphenMinus
							)
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getAdditiveExpressionAccess().getResultExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_feature_2_1=PlusSign
								{
									newLeafNode(lv_feature_2_1, grammarAccess.getAdditiveExpressionAccess().getFeaturePlusSignKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_1, null);
								}
								    |
								lv_feature_2_2=HyphenMinus
								{
									newLeafNode(lv_feature_2_2, grammarAccess.getAdditiveExpressionAccess().getFeatureHyphenMinusKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getAdditiveExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_2, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getAdditiveExpressionAccess().getRightMultiplicativeExpressionParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleMultiplicativeExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAdditiveExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"net.eldm.EldmDsl.MultiplicativeExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleMultiplicativeExpression
entryRuleMultiplicativeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicativeExpressionRule()); }
	iv_ruleMultiplicativeExpression=ruleMultiplicativeExpression
	{ $current=$iv_ruleMultiplicativeExpression.current; }
	EOF;

// Rule MultiplicativeExpression
ruleMultiplicativeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getUnaryOperationParserRuleCall_0());
		}
		this_UnaryOperation_0=ruleUnaryOperation
		{
			$current = $this_UnaryOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				((
					(
					)
					(
						(
							(
								Asterisk
								    |
								AsteriskAsterisk
								    |
								Solidus
								    |
								PercentSign
							)
						)
					)
				)
				)=>
				(
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getMultiplicativeExpressionAccess().getResultExpressionLeftAction_1_0_0_0(),
								$current);
						}
					)
					(
						(
							(
								lv_feature_2_1=Asterisk
								{
									newLeafNode(lv_feature_2_1, grammarAccess.getMultiplicativeExpressionAccess().getFeatureAsteriskKeyword_1_0_0_1_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_1, null);
								}
								    |
								lv_feature_2_2=AsteriskAsterisk
								{
									newLeafNode(lv_feature_2_2, grammarAccess.getMultiplicativeExpressionAccess().getFeatureAsteriskAsteriskKeyword_1_0_0_1_0_1());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_2, null);
								}
								    |
								lv_feature_2_3=Solidus
								{
									newLeafNode(lv_feature_2_3, grammarAccess.getMultiplicativeExpressionAccess().getFeatureSolidusKeyword_1_0_0_1_0_2());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_3, null);
								}
								    |
								lv_feature_2_4=PercentSign
								{
									newLeafNode(lv_feature_2_4, grammarAccess.getMultiplicativeExpressionAccess().getFeaturePercentSignKeyword_1_0_0_1_0_3());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getMultiplicativeExpressionRule());
									}
									setWithLastConsumed($current, "feature", lv_feature_2_4, null);
								}
							)
						)
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getMultiplicativeExpressionAccess().getRightUnaryOperationParserRuleCall_1_1_0());
					}
					lv_right_3_0=ruleUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMultiplicativeExpressionRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"net.eldm.EldmDsl.UnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUnaryOperationRule()); }
	iv_ruleUnaryOperation=ruleUnaryOperation
	{ $current=$iv_ruleUnaryOperation.current; }
	EOF;

// Rule UnaryOperation
ruleUnaryOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_feature_0_1=ExclamationMark
						{
							newLeafNode(lv_feature_0_1, grammarAccess.getUnaryOperationAccess().getFeatureExclamationMarkKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryOperationRule());
							}
							setWithLastConsumed($current, "feature", lv_feature_0_1, null);
						}
						    |
						lv_feature_0_2=PlusSign
						{
							newLeafNode(lv_feature_0_2, grammarAccess.getUnaryOperationAccess().getFeaturePlusSignKeyword_0_0_0_1());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryOperationRule());
							}
							setWithLastConsumed($current, "feature", lv_feature_0_2, null);
						}
						    |
						lv_feature_0_3=HyphenMinus
						{
							newLeafNode(lv_feature_0_3, grammarAccess.getUnaryOperationAccess().getFeatureHyphenMinusKeyword_0_0_0_2());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getUnaryOperationRule());
							}
							setWithLastConsumed($current, "feature", lv_feature_0_3, null);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getUnaryOperationAccess().getOperandUnaryOperationParserRuleCall_0_1_0());
					}
					lv_operand_1_0=ruleUnaryOperation
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUnaryOperationRule());
						}
						set(
							$current,
							"operand",
							lv_operand_1_0,
							"net.eldm.EldmDsl.UnaryOperation");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getUnaryOperationAccess().getPostfixOperationParserRuleCall_1());
		}
		this_PostfixOperation_2=rulePostfixOperation
		{
			$current = $this_PostfixOperation_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePostfixOperation
entryRulePostfixOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPostfixOperationRule()); }
	iv_rulePostfixOperation=rulePostfixOperation
	{ $current=$iv_rulePostfixOperation.current; }
	EOF;

// Rule PostfixOperation
rulePostfixOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPostfixOperationAccess().getBaseExpressionParserRuleCall_0());
		}
		this_BaseExpression_0=ruleBaseExpression
		{
			$current = $this_BaseExpression_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			((
				(
				)
				(
					(
						(
							PlusSignPlusSign
							    |
							HyphenMinusHyphenMinus
						)
					)
				)
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElementAndSet(
							grammarAccess.getPostfixOperationAccess().getPostfixOperationOperandAction_1_0_0(),
							$current);
					}
				)
				(
					(
						(
							lv_feature_2_1=PlusSignPlusSign
							{
								newLeafNode(lv_feature_2_1, grammarAccess.getPostfixOperationAccess().getFeaturePlusSignPlusSignKeyword_1_0_1_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPostfixOperationRule());
								}
								setWithLastConsumed($current, "feature", lv_feature_2_1, null);
							}
							    |
							lv_feature_2_2=HyphenMinusHyphenMinus
							{
								newLeafNode(lv_feature_2_2, grammarAccess.getPostfixOperationAccess().getFeatureHyphenMinusHyphenMinusKeyword_1_0_1_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getPostfixOperationRule());
								}
								setWithLastConsumed($current, "feature", lv_feature_2_2, null);
							}
						)
					)
				)
			)
		)?
	)
;

// Entry rule entryRuleBaseExpression
entryRuleBaseExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBaseExpressionRule()); }
	iv_ruleBaseExpression=ruleBaseExpression
	{ $current=$iv_ruleBaseExpression.current; }
	EOF;

// Rule BaseExpression
ruleBaseExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getBaseExpressionAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			otherlv_1=LeftParenthesis
			{
				newLeafNode(otherlv_1, grammarAccess.getBaseExpressionAccess().getLeftParenthesisKeyword_1_0());
			}
			{
				newCompositeNode(grammarAccess.getBaseExpressionAccess().getResultExpressionParserRuleCall_1_1());
			}
			this_ResultExpression_2=ruleResultExpression
			{
				$current = $this_ResultExpression_2.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_3=RightParenthesis
			{
				newLeafNode(otherlv_3, grammarAccess.getBaseExpressionAccess().getRightParenthesisKeyword_1_2());
			}
		)
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getPrimaryAccess().getValueLiteralParserRuleCall_0_0());
				}
				lv_value_0_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrimaryRule());
					}
					set(
						$current,
						"value",
						lv_value_0_0,
						"net.eldm.EldmDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				((
					RULE_ID
				)
				)=>
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPrimaryRule());
						}
					}
					otherlv_1=RULE_ID
					{
						newLeafNode(otherlv_1, grammarAccess.getPrimaryAccess().getTargetLetCrossReference_1_0_0());
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getPrimaryAccess().getMembersMemberGetParserRuleCall_1_1_0());
					}
					lv_members_2_0=ruleMemberGet
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPrimaryRule());
						}
						add(
							$current,
							"members",
							lv_members_2_0,
							"net.eldm.EldmDsl.MemberGet");
						afterParserOrEnumRuleCall();
					}
				)
			)*
		)
	)
;

// Entry rule entryRuleMemberGet
entryRuleMemberGet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemberGetRule()); }
	iv_ruleMemberGet=ruleMemberGet
	{ $current=$iv_ruleMemberGet.current; }
	EOF;

// Rule MemberGet
ruleMemberGet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0=FullStop
			{
				newLeafNode(otherlv_0, grammarAccess.getMemberGetAccess().getFullStopKeyword_0_0());
			}
			    |
			(
				(
					lv_isNullSafe_1_0=QuestionMarkFullStop
					{
						newLeafNode(lv_isNullSafe_1_0, grammarAccess.getMemberGetAccess().getIsNullSafeQuestionMarkFullStopKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getMemberGetRule());
						}
						setWithLastConsumed($current, "isNullSafe", true, "?.");
					}
				)
			)
		)
		(
			(
				lv_member_2_0=RULE_ID
				{
					newLeafNode(lv_member_2_0, grammarAccess.getMemberGetAccess().getMemberIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMemberGetRule());
					}
					setWithLastConsumed(
						$current,
						"member",
						lv_member_2_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getTypeDefParserRuleCall_0());
		}
		this_TypeDef_0=ruleTypeDef
		{
			$current = $this_TypeDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getExternalDefParserRuleCall_1());
		}
		this_ExternalDef_1=ruleExternalDef
		{
			$current = $this_ExternalDef_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Typedef
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeDefAccess().getTypedefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				(
					(
						(
							lv_parser_2_1=Match
							{
								newLeafNode(lv_parser_2_1, grammarAccess.getTypeDefAccess().getParserMatchKeyword_2_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTypeDefRule());
								}
								setWithLastConsumed($current, "parser", lv_parser_2_1, null);
							}
							    |
							lv_parser_2_2=Mask
							{
								newLeafNode(lv_parser_2_2, grammarAccess.getTypeDefAccess().getParserMaskKeyword_2_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTypeDefRule());
								}
								setWithLastConsumed($current, "parser", lv_parser_2_2, null);
							}
						)
					)
				)
				(
					(
						lv_code_3_0=RULE_TEXT
						{
							newLeafNode(lv_code_3_0, grammarAccess.getTypeDefAccess().getCodeTEXTTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeDefRule());
							}
							setWithLastConsumed(
								$current,
								"code",
								lv_code_3_0,
								"net.eldm.EldmDsl.TEXT");
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDefAccess().getTypeElementDefParserRuleCall_2_1_0());
					}
					lv_type_4_0=ruleElementDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDefRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"net.eldm.EldmDsl.ElementDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleElementDef
entryRuleElementDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementDefRule()); }
	iv_ruleElementDef=ruleElementDef
	{ $current=$iv_ruleElementDef.current; }
	EOF;

// Rule ElementDef
ruleElementDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getElementDefAccess().getNativeNativeDefParserRuleCall_0_0());
				}
				lv_native_0_0=ruleNativeDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getElementDefRule());
					}
					set(
						$current,
						"native",
						lv_native_0_0,
						"net.eldm.EldmDsl.NativeDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementDefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getElementDefAccess().getRefDefinitionCrossReference_1_0());
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getListDefParserRuleCall_2());
		}
		this_ListDef_2=ruleListDef
		{
			$current = $this_ListDef_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getMapDefParserRuleCall_3());
		}
		this_MapDef_3=ruleMapDef
		{
			$current = $this_MapDef_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getElementDefAccess().getEnumDefParserRuleCall_4());
		}
		this_EnumDef_4=ruleEnumDef
		{
			$current = $this_EnumDef_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMapDef
entryRuleMapDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapDefRule()); }
	iv_ruleMapDef=ruleMapDef
	{ $current=$iv_ruleMapDef.current; }
	EOF;

// Rule MapDef
ruleMapDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				LeftCurlyBracket
				(
					(
						(
							ruleMapEntryDef
						)
					)
					(
						Comma
						(
							(
								ruleMapEntryDef
							)
						)
					)*
				)?
				RightCurlyBracket
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getMapDefAccess().getMapDefAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=LeftCurlyBracket
				{
					newLeafNode(otherlv_1, grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_0_0_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_0_0());
							}
							lv_defs_2_0=ruleMapEntryDef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapDefRule());
								}
								add(
									$current,
									"defs",
									lv_defs_2_0,
									"net.eldm.EldmDsl.MapEntryDef");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=Comma
						{
							newLeafNode(otherlv_3, grammarAccess.getMapDefAccess().getCommaKeyword_0_0_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_1_1_0());
								}
								lv_defs_4_0=ruleMapEntryDef
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getMapDefRule());
									}
									add(
										$current,
										"defs",
										lv_defs_4_0,
										"net.eldm.EldmDsl.MapEntryDef");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_5=RightCurlyBracket
				{
					newLeafNode(otherlv_5, grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_0_0_3());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getMapDefAccess().getMapDefAction_1_0(),
						$current);
				}
			)
			otherlv_7=LeftCurlyBracket
			{
				newLeafNode(otherlv_7, grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_1_1());
			}
			this_BEGIN_8=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_8, grammarAccess.getMapDefAccess().getBEGINTerminalRuleCall_1_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_0_0());
						}
						lv_defs_9_0=ruleMapEntryDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapDefRule());
							}
							add(
								$current,
								"defs",
								lv_defs_9_0,
								"net.eldm.EldmDsl.MapEntryDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						newCompositeNode(grammarAccess.getMapDefAccess().getBREAKParserRuleCall_1_3_1_0());
					}
					ruleBREAK
					{
						afterParserOrEnumRuleCall();
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_1_1_0());
							}
							lv_defs_11_0=ruleMapEntryDef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapDefRule());
								}
								add(
									$current,
									"defs",
									lv_defs_11_0,
									"net.eldm.EldmDsl.MapEntryDef");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			this_END_12=RULE_END
			{
				newLeafNode(this_END_12, grammarAccess.getMapDefAccess().getENDTerminalRuleCall_1_4());
			}
			otherlv_13=RightCurlyBracket
			{
				newLeafNode(otherlv_13, grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleMapEntryDef
entryRuleMapEntryDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapEntryDefRule()); }
	iv_ruleMapEntryDef=ruleMapEntryDef
	{ $current=$iv_ruleMapEntryDef.current; }
	EOF;

// Rule MapEntryDef
ruleMapEntryDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMapEntryDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapEntryDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				(
					(
						lv_opt_1_0=QuestionMark
						{
							newLeafNode(lv_opt_1_0, grammarAccess.getMapEntryDefAccess().getOptQuestionMarkKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMapEntryDefRule());
							}
							setWithLastConsumed($current, "opt", true, "?");
						}
					)
				)?
				otherlv_2=Colon
				{
					newLeafNode(otherlv_2, grammarAccess.getMapEntryDefAccess().getColonKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapEntryDefAccess().getTypeElementDefParserRuleCall_1_0_2_0());
						}
						lv_type_3_0=ruleElementDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapEntryDefRule());
							}
							set(
								$current,
								"type",
								lv_type_3_0,
								"net.eldm.EldmDsl.ElementDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4=EqualsSign
				{
					newLeafNode(otherlv_4, grammarAccess.getMapEntryDefAccess().getEqualsSignKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapEntryDefAccess().getValueLiteralParserRuleCall_1_1_1_0());
						}
						lv_value_5_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapEntryDefRule());
							}
							set(
								$current,
								"value",
								lv_value_5_0,
								"net.eldm.EldmDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleListDef
entryRuleListDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListDefRule()); }
	iv_ruleListDef=ruleListDef
	{ $current=$iv_ruleListDef.current; }
	EOF;

// Rule ListDef
ruleListDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListDefAccess().getListDefAction_0(),
					$current);
			}
		)
		otherlv_1=FullStopFullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getListDefAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListDefAccess().getTypeElementDefParserRuleCall_2_0());
				}
				lv_type_2_0=ruleElementDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListDefRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"net.eldm.EldmDsl.ElementDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumDef
entryRuleEnumDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDefRule()); }
	iv_ruleEnumDef=ruleEnumDef
	{ $current=$iv_ruleEnumDef.current; }
	EOF;

// Rule EnumDef
ruleEnumDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Enum
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumDefAccess().getEnumKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDefAccess().getTypeMapDefParserRuleCall_1_0());
				}
				lv_type_1_0=ruleMapDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDefRule());
					}
					set(
						$current,
						"type",
						lv_type_1_0,
						"net.eldm.EldmDsl.MapDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_2=Colon
		{
			newLeafNode(otherlv_2, grammarAccess.getEnumDefAccess().getColonKeyword_2());
		}
		this_BEGIN_3=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_3, grammarAccess.getEnumDefAccess().getBEGINTerminalRuleCall_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDefAccess().getDefsEnumItemDefParserRuleCall_4_0());
				}
				lv_defs_4_0=ruleEnumItemDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDefRule());
					}
					add(
						$current,
						"defs",
						lv_defs_4_0,
						"net.eldm.EldmDsl.EnumItemDef");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_5=RULE_END
		{
			newLeafNode(this_END_5, grammarAccess.getEnumDefAccess().getENDTerminalRuleCall_5());
		}
	)
;

// Entry rule entryRuleEnumItemDef
entryRuleEnumItemDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumItemDefRule()); }
	iv_ruleEnumItemDef=ruleEnumItemDef
	{ $current=$iv_ruleEnumItemDef.current; }
	EOF;

// Rule EnumItemDef
ruleEnumItemDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumItemDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumItemDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumItemDefAccess().getValueMapLiteralParserRuleCall_1_0());
				}
				lv_value_1_0=ruleMapLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumItemDefRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"net.eldm.EldmDsl.MapLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)?
	)
;

// Entry rule entryRuleNativeDef
entryRuleNativeDef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNativeDefRule()); }
	iv_ruleNativeDef=ruleNativeDef
	{ $current=$iv_ruleNativeDef.current.getText(); }
	EOF;

// Rule NativeDef
ruleNativeDef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Any
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getAnyKeyword_0());
		}
		    |
		kw=Path
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getPathKeyword_1());
		}
		    |
		kw=Bool
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getBoolKeyword_2());
		}
		    |
		kw=Str
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getStrKeyword_3());
		}
		    |
		kw=Int
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getIntKeyword_4());
		}
		    |
		kw=Flt
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getFltKeyword_5());
		}
		    |
		kw=Lda
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getLdaKeyword_6());
		}
		    |
		kw=Ltm
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getLtmKeyword_7());
		}
		    |
		kw=Ldt
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getLdtKeyword_8());
		}
		    |
		kw=Map
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getMapKeyword_9());
		}
		    |
		kw=Lst
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getLstKeyword_10());
		}
		    |
		kw=Enum
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getEnumKeyword_11());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_0());
		}
		this_BoolLiteral_0=ruleBoolLiteral
		{
			$current = $this_BoolLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStrLiteralParserRuleCall_1());
		}
		this_StrLiteral_1=ruleStrLiteral
		{
			$current = $this_StrLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_2());
		}
		this_IntLiteral_2=ruleIntLiteral
		{
			$current = $this_IntLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getFltLiteralParserRuleCall_3());
		}
		this_FltLiteral_3=ruleFltLiteral
		{
			$current = $this_FltLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getDateLiteralParserRuleCall_4());
		}
		this_DateLiteral_4=ruleDateLiteral
		{
			$current = $this_DateLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getTimeLiteralParserRuleCall_5());
		}
		this_TimeLiteral_5=ruleTimeLiteral
		{
			$current = $this_TimeLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getDateTimeLiteralParserRuleCall_6());
		}
		this_DateTimeLiteral_6=ruleDateTimeLiteral
		{
			$current = $this_DateTimeLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getPathLiteralParserRuleCall_7());
		}
		this_PathLiteral_7=rulePathLiteral
		{
			$current = $this_PathLiteral_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_8());
		}
		this_ListLiteral_8=ruleListLiteral
		{
			$current = $this_ListLiteral_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_9());
		}
		this_MapLiteral_9=ruleMapLiteral
		{
			$current = $this_MapLiteral_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getEnumLiteralParserRuleCall_10());
		}
		this_EnumLiteral_10=ruleEnumLiteral
		{
			$current = $this_EnumLiteral_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getPatternLiteralParserRuleCall_11());
		}
		this_PatternLiteral_11=rulePatternLiteral
		{
			$current = $this_PatternLiteral_11.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolLiteralRule()); }
	iv_ruleBoolLiteral=ruleBoolLiteral
	{ $current=$iv_ruleBoolLiteral.current; }
	EOF;

// Rule BoolLiteral
ruleBoolLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0(),
					$current);
			}
		)
		(
			otherlv_1=False
			{
				newLeafNode(otherlv_1, grammarAccess.getBoolLiteralAccess().getFalseKeyword_1_0());
			}
			    |
			(
				(
					lv_isTrue_2_0=True
					{
						newLeafNode(lv_isTrue_2_0, grammarAccess.getBoolLiteralAccess().getIsTrueTrueKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolLiteralRule());
						}
						setWithLastConsumed($current, "isTrue", true, "true");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStrLiteral
entryRuleStrLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrLiteralRule()); }
	iv_ruleStrLiteral=ruleStrLiteral
	{ $current=$iv_ruleStrLiteral.current; }
	EOF;

// Rule StrLiteral
ruleStrLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_TEXT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStrLiteralAccess().getValueTEXTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStrLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.TEXT");
			}
		)
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_NATURAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueNATURALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.NATURAL");
			}
		)
	)
;

// Entry rule entryRuleFltLiteral
entryRuleFltLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFltLiteralRule()); }
	iv_ruleFltLiteral=ruleFltLiteral
	{ $current=$iv_ruleFltLiteral.current; }
	EOF;

// Rule FltLiteral
ruleFltLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getFltLiteralAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFltLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleDateLiteral
entryRuleDateLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateLiteralRule()); }
	iv_ruleDateLiteral=ruleDateLiteral
	{ $current=$iv_ruleDateLiteral.current; }
	EOF;

// Rule DateLiteral
ruleDateLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DATE
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDateLiteralAccess().getValueDATETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDateLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.DATE");
			}
		)
	)
;

// Entry rule entryRuleTimeLiteral
entryRuleTimeLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeLiteralRule()); }
	iv_ruleTimeLiteral=ruleTimeLiteral
	{ $current=$iv_ruleTimeLiteral.current; }
	EOF;

// Rule TimeLiteral
ruleTimeLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_TIME
			{
				newLeafNode(lv_value_0_0, grammarAccess.getTimeLiteralAccess().getValueTIMETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTimeLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.TIME");
			}
		)
	)
;

// Entry rule entryRuleDateTimeLiteral
entryRuleDateTimeLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDateTimeLiteralRule()); }
	iv_ruleDateTimeLiteral=ruleDateTimeLiteral
	{ $current=$iv_ruleDateTimeLiteral.current; }
	EOF;

// Rule DateTimeLiteral
ruleDateTimeLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_DATETIME
			{
				newLeafNode(lv_value_0_0, grammarAccess.getDateTimeLiteralAccess().getValueDATETIMETerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDateTimeLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.DATETIME");
			}
		)
	)
;

// Entry rule entryRulePathLiteral
entryRulePathLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPathLiteralRule()); }
	iv_rulePathLiteral=rulePathLiteral
	{ $current=$iv_rulePathLiteral.current; }
	EOF;

// Rule PathLiteral
rulePathLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_PATH
			{
				newLeafNode(lv_value_0_0, grammarAccess.getPathLiteralAccess().getValuePATHTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPathLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.PATH");
			}
		)
	)
;

// Entry rule entryRuleListLiteral
entryRuleListLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListLiteralRule()); }
	iv_ruleListLiteral=ruleListLiteral
	{ $current=$iv_ruleListLiteral.current; }
	EOF;

// Rule ListLiteral
ruleListLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListLiteralAccess().getListLiteralAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_0_0());
					}
					lv_vals_2_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListLiteralRule());
						}
						add(
							$current,
							"vals",
							lv_vals_2_0,
							"net.eldm.EldmDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_1_1_0());
						}
						lv_vals_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListLiteralRule());
							}
							add(
								$current,
								"vals",
								lv_vals_4_0,
								"net.eldm.EldmDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMapLiteral
entryRuleMapLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapLiteralRule()); }
	iv_ruleMapLiteral=ruleMapLiteral
	{ $current=$iv_ruleMapLiteral.current; }
	EOF;

// Rule MapLiteral
ruleMapLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				LeftCurlyBracket
				(
					(
						(
							ruleMapEntryLiteral
						)
					)
					(
						Comma
						(
							(
								ruleMapEntryLiteral
							)
						)
					)*
				)?
				RightCurlyBracket
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getMapLiteralAccess().getMapLiteralAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=LeftCurlyBracket
				{
					newLeafNode(otherlv_1, grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_0_0_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_0_0_2_0_0());
							}
							lv_entries_2_0=ruleMapEntryLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
								}
								add(
									$current,
									"entries",
									lv_entries_2_0,
									"net.eldm.EldmDsl.MapEntryLiteral");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=Comma
						{
							newLeafNode(otherlv_3, grammarAccess.getMapLiteralAccess().getCommaKeyword_0_0_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_0_0_2_1_1_0());
								}
								lv_entries_4_0=ruleMapEntryLiteral
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
									}
									add(
										$current,
										"entries",
										lv_entries_4_0,
										"net.eldm.EldmDsl.MapEntryLiteral");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_5=RightCurlyBracket
				{
					newLeafNode(otherlv_5, grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_0_0_3());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getMapLiteralAccess().getMapLiteralAction_1_0(),
						$current);
				}
			)
			otherlv_7=LeftCurlyBracket
			{
				newLeafNode(otherlv_7, grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1_1());
			}
			this_BEGIN_8=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_8, grammarAccess.getMapLiteralAccess().getBEGINTerminalRuleCall_1_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_1_3_0_0());
						}
						lv_entries_9_0=ruleMapEntryLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
							}
							add(
								$current,
								"entries",
								lv_entries_9_0,
								"net.eldm.EldmDsl.MapEntryLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						newCompositeNode(grammarAccess.getMapLiteralAccess().getBREAKParserRuleCall_1_3_1_0());
					}
					ruleBREAK
					{
						afterParserOrEnumRuleCall();
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_1_3_1_1_0());
							}
							lv_entries_11_0=ruleMapEntryLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
								}
								add(
									$current,
									"entries",
									lv_entries_11_0,
									"net.eldm.EldmDsl.MapEntryLiteral");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			this_END_12=RULE_END
			{
				newLeafNode(this_END_12, grammarAccess.getMapLiteralAccess().getENDTerminalRuleCall_1_4());
			}
			otherlv_13=RightCurlyBracket
			{
				newLeafNode(otherlv_13, grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleMapEntryLiteral
entryRuleMapEntryLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapEntryLiteralRule()); }
	iv_ruleMapEntryLiteral=ruleMapEntryLiteral
	{ $current=$iv_ruleMapEntryLiteral.current; }
	EOF;

// Rule MapEntryLiteral
ruleMapEntryLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMapEntryLiteralAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapEntryLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getMapEntryLiteralAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapEntryLiteralAccess().getValueLiteralParserRuleCall_2_0());
				}
				lv_value_2_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapEntryLiteralRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"net.eldm.EldmDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	iv_ruleEnumLiteral=ruleEnumLiteral
	{ $current=$iv_ruleEnumLiteral.current; }
	EOF;

// Rule EnumLiteral
ruleEnumLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumLiteralAccess().getEnumLiteralAction_0(),
					$current);
			}
		)
		otherlv_1=CommercialAt
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumLiteralAccess().getCommercialAtKeyword_1());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumLiteralRule());
					}
				}
				otherlv_2=RULE_ID
				{
					newLeafNode(otherlv_2, grammarAccess.getEnumLiteralAccess().getRefEnumItemDefCrossReference_2_0());
				}
			)
		)
	)
;

// Entry rule entryRulePatternLiteral
entryRulePatternLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternLiteralRule()); }
	iv_rulePatternLiteral=rulePatternLiteral
	{ $current=$iv_rulePatternLiteral.current; }
	EOF;

// Rule PatternLiteral
rulePatternLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPatternLiteralAccess().getPatternLiteralAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternLiteralAccess().getNativeNativeDefParserRuleCall_1_0_0());
					}
					lv_native_1_0=ruleNativeDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternLiteralRule());
						}
						set(
							$current,
							"native",
							lv_native_1_0,
							"net.eldm.EldmDsl.NativeDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPatternLiteralRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getPatternLiteralAccess().getRefDefinitionCrossReference_1_1_0());
					}
				)
			)
		)
		otherlv_3=CommercialAt
		{
			newLeafNode(otherlv_3, grammarAccess.getPatternLiteralAccess().getCommercialAtKeyword_2());
		}
		(
			(
				lv_text_4_0=RULE_TEXT
				{
					newLeafNode(lv_text_4_0, grammarAccess.getPatternLiteralAccess().getTextTEXTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatternLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_4_0,
						"net.eldm.EldmDsl.TEXT");
				}
			)
		)
	)
;

// Entry rule entryRuleBREAK
entryRuleBREAK returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBREAKRule()); }
	iv_ruleBREAK=ruleBREAK
	{ $current=$iv_ruleBREAK.current.getText(); }
	EOF;

// Rule BREAK
ruleBREAK returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=LineFeed
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBREAKAccess().getLineFeedKeyword_0());
		}
		    |
		kw=CarriageReturn
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBREAKAccess().getCarriageReturnKeyword_1());
		}
	)*
;
