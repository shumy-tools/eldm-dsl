/*
 * generated by Xtext 2.15.0
 */
parser grammar InternalEldmDslParser;

options {
	tokenVocab=InternalEldmDslLexer;
	superClass=AbstractInternalAntlrParser;
}

@header {
package net.eldm.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import net.eldm.services.EldmDslGrammarAccess;

}

@members {

 	private EldmDslGrammarAccess grammarAccess;

    public InternalEldmDslParser(TokenStream input, EldmDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Module";
   	}

   	@Override
   	protected EldmDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModule
entryRuleModule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModuleRule()); }
	iv_ruleModule=ruleModule
	{ $current=$iv_ruleModule.current; }
	EOF;

// Rule Module
ruleModule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Module
		{
			newLeafNode(otherlv_0, grammarAccess.getModuleAccess().getModuleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getNamePathParserRuleCall_1_0());
				}
				lv_name_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getImportsImportParserRuleCall_2_0());
				}
				lv_imports_2_0=ruleImport
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"imports",
						lv_imports_2_0,
						"net.eldm.EldmDsl.Import");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getPlugsPlugDslParserRuleCall_3_0());
				}
				lv_plugs_3_0=rulePlugDsl
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"plugs",
						lv_plugs_3_0,
						"net.eldm.EldmDsl.PlugDsl");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_4=Definitions
			{
				newLeafNode(otherlv_4, grammarAccess.getModuleAccess().getDefinitionsKeyword_4_0());
			}
			this_BEGIN_5=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_5, grammarAccess.getModuleAccess().getBEGINTerminalRuleCall_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModuleAccess().getDefsDefinitionParserRuleCall_4_2_0());
					}
					lv_defs_6_0=ruleDefinition
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModuleRule());
						}
						add(
							$current,
							"defs",
							lv_defs_6_0,
							"net.eldm.EldmDsl.Definition");
						afterParserOrEnumRuleCall();
					}
				)
			)+
			this_END_7=RULE_END
			{
				newLeafNode(this_END_7, grammarAccess.getModuleAccess().getENDTerminalRuleCall_4_3());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getOpersOperationParserRuleCall_5_0());
				}
				lv_opers_8_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"opers",
						lv_opers_8_0,
						"net.eldm.EldmDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getModuleAccess().getPathsSubPathParserRuleCall_6_0());
				}
				lv_paths_9_0=ruleSubPath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModuleRule());
					}
					add(
						$current,
						"paths",
						lv_paths_9_0,
						"net.eldm.EldmDsl.SubPath");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulePlugDsl
entryRulePlugDsl returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPlugDslRule()); }
	iv_rulePlugDsl=rulePlugDsl
	{ $current=$iv_rulePlugDsl.current; }
	EOF;

// Rule PlugDsl
rulePlugDsl returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=PlugDsl
		{
			newLeafNode(otherlv_0, grammarAccess.getPlugDslAccess().getPlugDslKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getPlugDslAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPlugDslRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPlugDslAccess().getAdaptorPatternLiteralParserRuleCall_2_0());
				}
				lv_adaptor_2_0=rulePatternLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPlugDslRule());
					}
					set(
						$current,
						"adaptor",
						lv_adaptor_2_0,
						"net.eldm.EldmDsl.PatternLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImport
entryRuleImport returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportRule()); }
	iv_ruleImport=ruleImport
	{ $current=$iv_ruleImport.current; }
	EOF;

// Rule Import
ruleImport returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getImportAccess().getImportOperationParserRuleCall_0());
		}
		this_ImportOperation_0=ruleImportOperation
		{
			$current = $this_ImportOperation_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getImportAccess().getImportDefinitionParserRuleCall_1());
		}
		this_ImportDefinition_1=ruleImportDefinition
		{
			$current = $this_ImportDefinition_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleImportOperation
entryRuleImportOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportOperationRule()); }
	iv_ruleImportOperation=ruleImportOperation
	{ $current=$iv_ruleImportOperation.current; }
	EOF;

// Rule ImportOperation
ruleImportOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getImportOperationAccess().getNamePathParserRuleCall_0_0());
				}
				lv_name_0_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportOperationRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=From
		{
			newLeafNode(otherlv_1, grammarAccess.getImportOperationAccess().getFromKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportOperationAccess().getRefPathParserRuleCall_2_0());
				}
				lv_ref_2_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportOperationRule());
					}
					set(
						$current,
						"ref",
						lv_ref_2_0,
						"net.eldm.EldmDsl.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportDefinition
entryRuleImportDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportDefinitionRule()); }
	iv_ruleImportDefinition=ruleImportDefinition
	{ $current=$iv_ruleImportDefinition.current; }
	EOF;

// Rule ImportDefinition
ruleImportDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_0_0());
					}
					lv_defs_0_0=ruleExternalDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
						}
						add(
							$current,
							"defs",
							lv_defs_0_0,
							"net.eldm.EldmDsl.ExternalDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1=Comma
				{
					newLeafNode(otherlv_1, grammarAccess.getImportDefinitionAccess().getCommaKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getImportDefinitionAccess().getDefsExternalDefParserRuleCall_0_1_1_0());
						}
						lv_defs_2_0=ruleExternalDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
							}
							add(
								$current,
								"defs",
								lv_defs_2_0,
								"net.eldm.EldmDsl.ExternalDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_3=From
		{
			newLeafNode(otherlv_3, grammarAccess.getImportDefinitionAccess().getFromKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportDefinitionAccess().getRefPathParserRuleCall_2_0());
				}
				lv_ref_4_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportDefinitionRule());
					}
					set(
						$current,
						"ref",
						lv_ref_4_0,
						"net.eldm.EldmDsl.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExternalDef
entryRuleExternalDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExternalDefRule()); }
	iv_ruleExternalDef=ruleExternalDef
	{ $current=$iv_ruleExternalDef.current; }
	EOF;

// Rule ExternalDef
ruleExternalDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					lv_ref_0_0=RULE_ID
					{
						newLeafNode(lv_ref_0_0, grammarAccess.getExternalDefAccess().getRefIDTerminalRuleCall_0_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExternalDefRule());
						}
						setWithLastConsumed(
							$current,
							"ref",
							lv_ref_0_0,
							"net.eldm.EldmDsl.ID");
					}
				)
			)
			(
				otherlv_1=As
				{
					newLeafNode(otherlv_1, grammarAccess.getExternalDefAccess().getAsKeyword_0_1_0());
				}
				(
					(
						lv_name_2_0=RULE_ID
						{
							newLeafNode(lv_name_2_0, grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExternalDefRule());
							}
							setWithLastConsumed(
								$current,
								"name",
								lv_name_2_0,
								"net.eldm.EldmDsl.ID");
						}
					)
				)
			)?
		)
		    |
		(
			((
				RULE_ID
			)
			)=>
			(
				lv_name_3_0=RULE_ID
				{
					newLeafNode(lv_name_3_0, grammarAccess.getExternalDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getExternalDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_3_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleSubPath
entryRuleSubPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSubPathRule()); }
	iv_ruleSubPath=ruleSubPath
	{ $current=$iv_ruleSubPath.current; }
	EOF;

// Rule SubPath
ruleSubPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Def
		{
			newLeafNode(otherlv_0, grammarAccess.getSubPathAccess().getDefKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubPathAccess().getNamePathParserRuleCall_1_0());
				}
				lv_name_1_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubPathRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
		this_BEGIN_2=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_2, grammarAccess.getSubPathAccess().getBEGINTerminalRuleCall_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSubPathAccess().getOpersOperationParserRuleCall_3_0());
				}
				lv_opers_3_0=ruleOperation
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSubPathRule());
					}
					add(
						$current,
						"opers",
						lv_opers_3_0,
						"net.eldm.EldmDsl.Operation");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_4=RULE_END
		{
			newLeafNode(this_END_4, grammarAccess.getSubPathAccess().getENDTerminalRuleCall_4());
		}
	)
;

// Entry rule entryRuleOperation
entryRuleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOperationRule()); }
	iv_ruleOperation=ruleOperation
	{ $current=$iv_ruleOperation.current; }
	EOF;

// Rule Operation
ruleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Def
		{
			newLeafNode(otherlv_0, grammarAccess.getOperationAccess().getDefKeyword_0());
		}
		(
			(
				(
					lv_isGet_1_0=Get
					{
						newLeafNode(lv_isGet_1_0, grammarAccess.getOperationAccess().getIsGetGetKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getOperationRule());
						}
						setWithLastConsumed($current, "isGet", true, "get");
					}
				)
			)
			    |
			otherlv_2=Set
			{
				newLeafNode(otherlv_2, grammarAccess.getOperationAccess().getSetKeyword_1_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getNamePathParserRuleCall_2_0());
				}
				lv_name_3_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"name",
						lv_name_3_0,
						"net.eldm.EldmDsl.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getParamParamDefParserRuleCall_3_0());
				}
				lv_param_4_0=ruleParamDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"param",
						lv_param_4_0,
						"net.eldm.EldmDsl.ParamDef");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			otherlv_5=HyphenMinusGreaterThanSign
			{
				newLeafNode(otherlv_5, grammarAccess.getOperationAccess().getHyphenMinusGreaterThanSignKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOperationAccess().getResultElementTypeDefParserRuleCall_4_1_0());
					}
					lv_result_6_0=ruleElementTypeDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOperationRule());
						}
						set(
							$current,
							"result",
							lv_result_6_0,
							"net.eldm.EldmDsl.ElementTypeDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_7=Colon
		{
			newLeafNode(otherlv_7, grammarAccess.getOperationAccess().getColonKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOperationAccess().getBodyBlockExpressionParserRuleCall_6_0());
				}
				lv_body_8_0=ruleBlockExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOperationRule());
					}
					set(
						$current,
						"body",
						lv_body_8_0,
						"net.eldm.EldmDsl.BlockExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleParamDef
entryRuleParamDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParamDefRule()); }
	iv_ruleParamDef=ruleParamDef
	{ $current=$iv_ruleParamDef.current; }
	EOF;

// Rule ParamDef
ruleParamDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getParamDefAccess().getDefMapDefParserRuleCall_0_0());
				}
				lv_def_0_0=ruleMapDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getParamDefRule());
					}
					set(
						$current,
						"def",
						lv_def_0_0,
						"net.eldm.EldmDsl.MapDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getParamDefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getParamDefAccess().getRefMapDefCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleBlockExpression
entryRuleBlockExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBlockExpressionRule()); }
	iv_ruleBlockExpression=ruleBlockExpression
	{ $current=$iv_ruleBlockExpression.current.getText(); }
	EOF;

// Rule BlockExpression
ruleBlockExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_BEGIN_0=RULE_BEGIN
		{
			$current.merge(this_BEGIN_0);
		}
		{
			newLeafNode(this_BEGIN_0, grammarAccess.getBlockExpressionAccess().getBEGINTerminalRuleCall_0());
		}
		kw=Block
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBlockExpressionAccess().getBlockKeyword_1());
		}
		this_END_2=RULE_END
		{
			$current.merge(this_END_2);
		}
		{
			newLeafNode(this_END_2, grammarAccess.getBlockExpressionAccess().getENDTerminalRuleCall_2());
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current.getText(); }
	EOF;

// Rule Expression
ruleExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=Exp
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getExpressionAccess().getExpKeyword());
	}
;

// Entry rule entryRuleMapExpression
entryRuleMapExpression returns [String current=null]:
	{ newCompositeNode(grammarAccess.getMapExpressionRule()); }
	iv_ruleMapExpression=ruleMapExpression
	{ $current=$iv_ruleMapExpression.current.getText(); }
	EOF;

// Rule MapExpression
ruleMapExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	kw=Test10
	{
		$current.merge(kw);
		newLeafNode(kw, grammarAccess.getMapExpressionAccess().getTest10Keyword());
	}
;

// Entry rule entryRuleDefinition
entryRuleDefinition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDefinitionRule()); }
	iv_ruleDefinition=ruleDefinition
	{ $current=$iv_ruleDefinition.current; }
	EOF;

// Rule Definition
ruleDefinition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getTypeDefParserRuleCall_0());
		}
		this_TypeDef_0=ruleTypeDef
		{
			$current = $this_TypeDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getEnumDefParserRuleCall_1());
		}
		this_EnumDef_1=ruleEnumDef
		{
			$current = $this_EnumDef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getDefinitionAccess().getExternalDefParserRuleCall_2());
		}
		this_ExternalDef_2=ruleExternalDef
		{
			$current = $this_ExternalDef_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypeDef
entryRuleTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypeDefRule()); }
	iv_ruleTypeDef=ruleTypeDef
	{ $current=$iv_ruleTypeDef.current; }
	EOF;

// Rule TypeDef
ruleTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Typedef
		{
			newLeafNode(otherlv_0, grammarAccess.getTypeDefAccess().getTypedefKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTypeDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				(
					(
						(
							lv_parser_2_1=Regex
							{
								newLeafNode(lv_parser_2_1, grammarAccess.getTypeDefAccess().getParserRegexKeyword_2_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTypeDefRule());
								}
								setWithLastConsumed($current, "parser", lv_parser_2_1, null);
							}
							    |
							lv_parser_2_2=Mask
							{
								newLeafNode(lv_parser_2_2, grammarAccess.getTypeDefAccess().getParserMaskKeyword_2_0_0_0_1());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTypeDefRule());
								}
								setWithLastConsumed($current, "parser", lv_parser_2_2, null);
							}
							    |
							lv_parser_2_3=Return
							{
								newLeafNode(lv_parser_2_3, grammarAccess.getTypeDefAccess().getParserReturnKeyword_2_0_0_0_2());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTypeDefRule());
								}
								setWithLastConsumed($current, "parser", lv_parser_2_3, null);
							}
						)
					)
				)
				(
					(
						lv_code_3_0=RULE_TEXT
						{
							newLeafNode(lv_code_3_0, grammarAccess.getTypeDefAccess().getCodeTEXTTerminalRuleCall_2_0_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getTypeDefRule());
							}
							setWithLastConsumed(
								$current,
								"code",
								lv_code_3_0,
								"net.eldm.EldmDsl.TEXT");
						}
					)
				)
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getTypeDefAccess().getTypeValueDefParserRuleCall_2_1_0());
					}
					lv_type_4_0=ruleValueDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTypeDefRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"net.eldm.EldmDsl.ValueDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleEnumDef
entryRuleEnumDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumDefRule()); }
	iv_ruleEnumDef=ruleEnumDef
	{ $current=$iv_ruleEnumDef.current; }
	EOF;

// Rule EnumDef
ruleEnumDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=Enum
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumDefAccess().getEnumKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEnumDefAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDefAccess().getTypeMapDefParserRuleCall_2_0());
				}
				lv_type_2_0=ruleMapDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDefRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"net.eldm.EldmDsl.MapDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=Colon
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumDefAccess().getColonKeyword_3());
		}
		this_BEGIN_4=RULE_BEGIN
		{
			newLeafNode(this_BEGIN_4, grammarAccess.getEnumDefAccess().getBEGINTerminalRuleCall_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumDefAccess().getDefsEnumItemDefParserRuleCall_5_0());
				}
				lv_defs_5_0=ruleEnumItemDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumDefRule());
					}
					add(
						$current,
						"defs",
						lv_defs_5_0,
						"net.eldm.EldmDsl.EnumItemDef");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		this_END_6=RULE_END
		{
			newLeafNode(this_END_6, grammarAccess.getEnumDefAccess().getENDTerminalRuleCall_6());
		}
	)
;

// Entry rule entryRuleEnumItemDef
entryRuleEnumItemDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumItemDefRule()); }
	iv_ruleEnumItemDef=ruleEnumItemDef
	{ $current=$iv_ruleEnumItemDef.current; }
	EOF;

// Rule EnumItemDef
ruleEnumItemDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEnumItemDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumItemDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumItemDefAccess().getValueMapLiteralParserRuleCall_1_0());
				}
				lv_value_1_0=ruleMapLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumItemDefRule());
					}
					set(
						$current,
						"value",
						lv_value_1_0,
						"net.eldm.EldmDsl.MapLiteral");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleElementTypeDef
entryRuleElementTypeDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getElementTypeDefRule()); }
	iv_ruleElementTypeDef=ruleElementTypeDef
	{ $current=$iv_ruleElementTypeDef.current; }
	EOF;

// Rule ElementTypeDef
ruleElementTypeDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getElementTypeDefAccess().getValueDefParserRuleCall_0());
		}
		this_ValueDef_0=ruleValueDef
		{
			$current = $this_ValueDef_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getElementTypeDefRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getElementTypeDefAccess().getRefDefinitionCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleValueDef
entryRuleValueDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueDefRule()); }
	iv_ruleValueDef=ruleValueDef
	{ $current=$iv_ruleValueDef.current; }
	EOF;

// Rule ValueDef
ruleValueDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getValueDefAccess().getNativeNativeDefParserRuleCall_0_0());
				}
				lv_native_0_0=ruleNativeDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getValueDefRule());
					}
					set(
						$current,
						"native",
						lv_native_0_0,
						"net.eldm.EldmDsl.NativeDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getValueDefAccess().getListDefParserRuleCall_1());
		}
		this_ListDef_1=ruleListDef
		{
			$current = $this_ListDef_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getValueDefAccess().getMapDefParserRuleCall_2());
		}
		this_MapDef_2=ruleMapDef
		{
			$current = $this_MapDef_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMapDef
entryRuleMapDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapDefRule()); }
	iv_ruleMapDef=ruleMapDef
	{ $current=$iv_ruleMapDef.current; }
	EOF;

// Rule MapDef
ruleMapDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				LeftCurlyBracket
				(
					(
						(
							ruleMapEntryDef
						)
					)
					(
						Comma
						(
							(
								ruleMapEntryDef
							)
						)
					)*
				)?
				RightCurlyBracket
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getMapDefAccess().getMapDefAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=LeftCurlyBracket
				{
					newLeafNode(otherlv_1, grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_0_0_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_0_0());
							}
							lv_defs_2_0=ruleMapEntryDef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapDefRule());
								}
								add(
									$current,
									"defs",
									lv_defs_2_0,
									"net.eldm.EldmDsl.MapEntryDef");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=Comma
						{
							newLeafNode(otherlv_3, grammarAccess.getMapDefAccess().getCommaKeyword_0_0_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_0_0_2_1_1_0());
								}
								lv_defs_4_0=ruleMapEntryDef
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getMapDefRule());
									}
									add(
										$current,
										"defs",
										lv_defs_4_0,
										"net.eldm.EldmDsl.MapEntryDef");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_5=RightCurlyBracket
				{
					newLeafNode(otherlv_5, grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_0_0_3());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getMapDefAccess().getMapDefAction_1_0(),
						$current);
				}
			)
			otherlv_7=LeftCurlyBracket
			{
				newLeafNode(otherlv_7, grammarAccess.getMapDefAccess().getLeftCurlyBracketKeyword_1_1());
			}
			this_BEGIN_8=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_8, grammarAccess.getMapDefAccess().getBEGINTerminalRuleCall_1_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_0_0());
						}
						lv_defs_9_0=ruleMapEntryDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapDefRule());
							}
							add(
								$current,
								"defs",
								lv_defs_9_0,
								"net.eldm.EldmDsl.MapEntryDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						newCompositeNode(grammarAccess.getMapDefAccess().getBREAKParserRuleCall_1_3_1_0());
					}
					ruleBREAK
					{
						afterParserOrEnumRuleCall();
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMapDefAccess().getDefsMapEntryDefParserRuleCall_1_3_1_1_0());
							}
							lv_defs_11_0=ruleMapEntryDef
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapDefRule());
								}
								add(
									$current,
									"defs",
									lv_defs_11_0,
									"net.eldm.EldmDsl.MapEntryDef");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			this_END_12=RULE_END
			{
				newLeafNode(this_END_12, grammarAccess.getMapDefAccess().getENDTerminalRuleCall_1_4());
			}
			otherlv_13=RightCurlyBracket
			{
				newLeafNode(otherlv_13, grammarAccess.getMapDefAccess().getRightCurlyBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleMapEntryDef
entryRuleMapEntryDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapEntryDefRule()); }
	iv_ruleMapEntryDef=ruleMapEntryDef
	{ $current=$iv_ruleMapEntryDef.current; }
	EOF;

// Rule MapEntryDef
ruleMapEntryDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMapEntryDefAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapEntryDefRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		(
			(
				(
					(
						lv_opt_1_0=QuestionMark
						{
							newLeafNode(lv_opt_1_0, grammarAccess.getMapEntryDefAccess().getOptQuestionMarkKeyword_1_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMapEntryDefRule());
							}
							setWithLastConsumed($current, "opt", true, "?");
						}
					)
				)?
				otherlv_2=Colon
				{
					newLeafNode(otherlv_2, grammarAccess.getMapEntryDefAccess().getColonKeyword_1_0_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMapEntryDefAccess().getTypeElementTypeDefParserRuleCall_1_0_2_0());
						}
						lv_type_3_0=ruleElementTypeDef
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapEntryDefRule());
							}
							set(
								$current,
								"type",
								lv_type_3_0,
								"net.eldm.EldmDsl.ElementTypeDef");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						lv_opt_4_0=EqualsSign
						{
							newLeafNode(lv_opt_4_0, grammarAccess.getMapEntryDefAccess().getOptEqualsSignKeyword_1_1_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getMapEntryDefRule());
							}
							setWithLastConsumed($current, "opt", true, "=");
						}
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getMapEntryDefAccess().getValueLiteralParserRuleCall_1_1_1_0());
						}
						lv_value_5_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapEntryDefRule());
							}
							set(
								$current,
								"value",
								lv_value_5_0,
								"net.eldm.EldmDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleListDef
entryRuleListDef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListDefRule()); }
	iv_ruleListDef=ruleListDef
	{ $current=$iv_ruleListDef.current; }
	EOF;

// Rule ListDef
ruleListDef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListDefAccess().getListDefAction_0(),
					$current);
			}
		)
		otherlv_1=FullStopFullStop
		{
			newLeafNode(otherlv_1, grammarAccess.getListDefAccess().getFullStopFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListDefAccess().getTypeElementTypeDefParserRuleCall_2_0());
				}
				lv_type_2_0=ruleElementTypeDef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListDefRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"net.eldm.EldmDsl.ElementTypeDef");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleNativeDef
entryRuleNativeDef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNativeDefRule()); }
	iv_ruleNativeDef=ruleNativeDef
	{ $current=$iv_ruleNativeDef.current.getText(); }
	EOF;

// Rule NativeDef
ruleNativeDef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=Any
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getAnyKeyword_0());
		}
		    |
		kw=Bool
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getBoolKeyword_1());
		}
		    |
		kw=Str
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getStrKeyword_2());
		}
		    |
		kw=Int
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getIntKeyword_3());
		}
		    |
		kw=Flt
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getFltKeyword_4());
		}
		    |
		kw=Lda
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getLdaKeyword_5());
		}
		    |
		kw=Ltm
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getLtmKeyword_6());
		}
		    |
		kw=Ldt
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getLdtKeyword_7());
		}
		    |
		kw=Path
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativeDefAccess().getPathKeyword_8());
		}
	)
;

// Entry rule entryRuleLiteral
entryRuleLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLiteralRule()); }
	iv_ruleLiteral=ruleLiteral
	{ $current=$iv_ruleLiteral.current; }
	EOF;

// Rule Literal
ruleLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getBoolLiteralParserRuleCall_0());
		}
		this_BoolLiteral_0=ruleBoolLiteral
		{
			$current = $this_BoolLiteral_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getStrLiteralParserRuleCall_1());
		}
		this_StrLiteral_1=ruleStrLiteral
		{
			$current = $this_StrLiteral_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getIntLiteralParserRuleCall_2());
		}
		this_IntLiteral_2=ruleIntLiteral
		{
			$current = $this_IntLiteral_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getFltLiteralParserRuleCall_3());
		}
		this_FltLiteral_3=ruleFltLiteral
		{
			$current = $this_FltLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getListLiteralParserRuleCall_4());
		}
		this_ListLiteral_4=ruleListLiteral
		{
			$current = $this_ListLiteral_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getMapLiteralParserRuleCall_5());
		}
		this_MapLiteral_5=ruleMapLiteral
		{
			$current = $this_MapLiteral_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getEnumLiteralParserRuleCall_6());
		}
		this_EnumLiteral_6=ruleEnumLiteral
		{
			$current = $this_EnumLiteral_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getLiteralAccess().getPatternLiteralParserRuleCall_7());
		}
		this_PatternLiteral_7=rulePatternLiteral
		{
			$current = $this_PatternLiteral_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getLiteralAccess().getPathPathParserRuleCall_8_0());
				}
				lv_path_8_0=rulePath
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLiteralRule());
					}
					set(
						$current,
						"path",
						lv_path_8_0,
						"net.eldm.EldmDsl.Path");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleBoolLiteral
entryRuleBoolLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoolLiteralRule()); }
	iv_ruleBoolLiteral=ruleBoolLiteral
	{ $current=$iv_ruleBoolLiteral.current; }
	EOF;

// Rule BoolLiteral
ruleBoolLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBoolLiteralAccess().getBoolLiteralAction_0(),
					$current);
			}
		)
		(
			otherlv_1=False
			{
				newLeafNode(otherlv_1, grammarAccess.getBoolLiteralAccess().getFalseKeyword_1_0());
			}
			    |
			(
				(
					lv_isTrue_2_0=True
					{
						newLeafNode(lv_isTrue_2_0, grammarAccess.getBoolLiteralAccess().getIsTrueTrueKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoolLiteralRule());
						}
						setWithLastConsumed($current, "isTrue", true, "true");
					}
				)
			)
		)
	)
;

// Entry rule entryRuleStrLiteral
entryRuleStrLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStrLiteralRule()); }
	iv_ruleStrLiteral=ruleStrLiteral
	{ $current=$iv_ruleStrLiteral.current; }
	EOF;

// Rule StrLiteral
ruleStrLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_TEXT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getStrLiteralAccess().getValueTEXTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStrLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.TEXT");
			}
		)
	)
;

// Entry rule entryRuleIntLiteral
entryRuleIntLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntLiteralRule()); }
	iv_ruleIntLiteral=ruleIntLiteral
	{ $current=$iv_ruleIntLiteral.current; }
	EOF;

// Rule IntLiteral
ruleIntLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_NATURAL
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntLiteralAccess().getValueNATURALTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.NATURAL");
			}
		)
	)
;

// Entry rule entryRuleFltLiteral
entryRuleFltLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFltLiteralRule()); }
	iv_ruleFltLiteral=ruleFltLiteral
	{ $current=$iv_ruleFltLiteral.current; }
	EOF;

// Rule FltLiteral
ruleFltLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_FLOAT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getFltLiteralAccess().getValueFLOATTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getFltLiteralRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"net.eldm.EldmDsl.FLOAT");
			}
		)
	)
;

// Entry rule entryRuleListLiteral
entryRuleListLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListLiteralRule()); }
	iv_ruleListLiteral=ruleListLiteral
	{ $current=$iv_ruleListLiteral.current; }
	EOF;

// Rule ListLiteral
ruleListLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getListLiteralAccess().getListLiteralAction_0(),
					$current);
			}
		)
		otherlv_1=LeftSquareBracket
		{
			newLeafNode(otherlv_1, grammarAccess.getListLiteralAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_0_0());
					}
					lv_vals_2_0=ruleLiteral
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getListLiteralRule());
						}
						add(
							$current,
							"vals",
							lv_vals_2_0,
							"net.eldm.EldmDsl.Literal");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=Comma
				{
					newLeafNode(otherlv_3, grammarAccess.getListLiteralAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getListLiteralAccess().getValsLiteralParserRuleCall_2_1_1_0());
						}
						lv_vals_4_0=ruleLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getListLiteralRule());
							}
							add(
								$current,
								"vals",
								lv_vals_4_0,
								"net.eldm.EldmDsl.Literal");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5=RightSquareBracket
		{
			newLeafNode(otherlv_5, grammarAccess.getListLiteralAccess().getRightSquareBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleMapLiteral
entryRuleMapLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapLiteralRule()); }
	iv_ruleMapLiteral=ruleMapLiteral
	{ $current=$iv_ruleMapLiteral.current; }
	EOF;

// Rule MapLiteral
ruleMapLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			((
				(
				)
				LeftCurlyBracket
				(
					(
						(
							ruleMapEntryLiteral
						)
					)
					(
						Comma
						(
							(
								ruleMapEntryLiteral
							)
						)
					)*
				)?
				RightCurlyBracket
			)
			)=>
			(
				(
					{
						$current = forceCreateModelElement(
							grammarAccess.getMapLiteralAccess().getMapLiteralAction_0_0_0(),
							$current);
					}
				)
				otherlv_1=LeftCurlyBracket
				{
					newLeafNode(otherlv_1, grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_0_0_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_0_0_2_0_0());
							}
							lv_entries_2_0=ruleMapEntryLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
								}
								add(
									$current,
									"entries",
									lv_entries_2_0,
									"net.eldm.EldmDsl.MapEntryLiteral");
								afterParserOrEnumRuleCall();
							}
						)
					)
					(
						otherlv_3=Comma
						{
							newLeafNode(otherlv_3, grammarAccess.getMapLiteralAccess().getCommaKeyword_0_0_2_1_0());
						}
						(
							(
								{
									newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_0_0_2_1_1_0());
								}
								lv_entries_4_0=ruleMapEntryLiteral
								{
									if ($current==null) {
										$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
									}
									add(
										$current,
										"entries",
										lv_entries_4_0,
										"net.eldm.EldmDsl.MapEntryLiteral");
									afterParserOrEnumRuleCall();
								}
							)
						)
					)*
				)?
				otherlv_5=RightCurlyBracket
				{
					newLeafNode(otherlv_5, grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_0_0_3());
				}
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getMapLiteralAccess().getMapLiteralAction_1_0(),
						$current);
				}
			)
			otherlv_7=LeftCurlyBracket
			{
				newLeafNode(otherlv_7, grammarAccess.getMapLiteralAccess().getLeftCurlyBracketKeyword_1_1());
			}
			this_BEGIN_8=RULE_BEGIN
			{
				newLeafNode(this_BEGIN_8, grammarAccess.getMapLiteralAccess().getBEGINTerminalRuleCall_1_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_1_3_0_0());
						}
						lv_entries_9_0=ruleMapEntryLiteral
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
							}
							add(
								$current,
								"entries",
								lv_entries_9_0,
								"net.eldm.EldmDsl.MapEntryLiteral");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					{
						newCompositeNode(grammarAccess.getMapLiteralAccess().getBREAKParserRuleCall_1_3_1_0());
					}
					ruleBREAK
					{
						afterParserOrEnumRuleCall();
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getMapLiteralAccess().getEntriesMapEntryLiteralParserRuleCall_1_3_1_1_0());
							}
							lv_entries_11_0=ruleMapEntryLiteral
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getMapLiteralRule());
								}
								add(
									$current,
									"entries",
									lv_entries_11_0,
									"net.eldm.EldmDsl.MapEntryLiteral");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)?
			this_END_12=RULE_END
			{
				newLeafNode(this_END_12, grammarAccess.getMapLiteralAccess().getENDTerminalRuleCall_1_4());
			}
			otherlv_13=RightCurlyBracket
			{
				newLeafNode(otherlv_13, grammarAccess.getMapLiteralAccess().getRightCurlyBracketKeyword_1_5());
			}
		)
	)
;

// Entry rule entryRuleMapEntryLiteral
entryRuleMapEntryLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMapEntryLiteralRule()); }
	iv_ruleMapEntryLiteral=ruleMapEntryLiteral
	{ $current=$iv_ruleMapEntryLiteral.current; }
	EOF;

// Rule MapEntryLiteral
ruleMapEntryLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getMapEntryLiteralAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMapEntryLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"net.eldm.EldmDsl.ID");
				}
			)
		)
		otherlv_1=Colon
		{
			newLeafNode(otherlv_1, grammarAccess.getMapEntryLiteralAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMapEntryLiteralAccess().getValueLiteralParserRuleCall_2_0());
				}
				lv_value_2_0=ruleLiteral
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMapEntryLiteralRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"net.eldm.EldmDsl.Literal");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleEnumLiteral
entryRuleEnumLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumLiteralRule()); }
	iv_ruleEnumLiteral=ruleEnumLiteral
	{ $current=$iv_ruleEnumLiteral.current; }
	EOF;

// Rule EnumLiteral
ruleEnumLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEnumLiteralAccess().getEnumLiteralAction_0(),
					$current);
			}
		)
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEnumLiteralRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getEnumLiteralAccess().getRefEnumItemDefCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRulePatternLiteral
entryRulePatternLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPatternLiteralRule()); }
	iv_rulePatternLiteral=rulePatternLiteral
	{ $current=$iv_rulePatternLiteral.current; }
	EOF;

// Rule PatternLiteral
rulePatternLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPatternLiteralAccess().getPatternLiteralAction_0(),
					$current);
			}
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getPatternLiteralAccess().getNativeNativePatternDefParserRuleCall_1_0_0());
					}
					lv_native_1_0=ruleNativePatternDef
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPatternLiteralRule());
						}
						set(
							$current,
							"native",
							lv_native_1_0,
							"net.eldm.EldmDsl.NativePatternDef");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPatternLiteralRule());
						}
					}
					otherlv_2=RULE_ID
					{
						newLeafNode(otherlv_2, grammarAccess.getPatternLiteralAccess().getRefDefinitionCrossReference_1_1_0());
					}
				)
			)
		)
		otherlv_3=CommercialAt
		{
			newLeafNode(otherlv_3, grammarAccess.getPatternLiteralAccess().getCommercialAtKeyword_2());
		}
		(
			(
				lv_text_4_0=RULE_TEXT
				{
					newLeafNode(lv_text_4_0, grammarAccess.getPatternLiteralAccess().getTextTEXTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPatternLiteralRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_4_0,
						"net.eldm.EldmDsl.TEXT");
				}
			)
		)
	)
;

// Entry rule entryRuleNativePatternDef
entryRuleNativePatternDef returns [String current=null]:
	{ newCompositeNode(grammarAccess.getNativePatternDefRule()); }
	iv_ruleNativePatternDef=ruleNativePatternDef
	{ $current=$iv_ruleNativePatternDef.current.getText(); }
	EOF;

// Rule NativePatternDef
ruleNativePatternDef returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getNativePatternDefAccess().getNativeDefParserRuleCall_0());
		}
		this_NativeDef_0=ruleNativeDef
		{
			$current.merge(this_NativeDef_0);
		}
		{
			afterParserOrEnumRuleCall();
		}
		    |
		kw=Map
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativePatternDefAccess().getMapKeyword_1());
		}
		    |
		kw=Lst
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativePatternDefAccess().getLstKeyword_2());
		}
		    |
		kw=Enum
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getNativePatternDefAccess().getEnumKeyword_3());
		}
	)
;

// Entry rule entryRulePath
entryRulePath returns [String current=null]:
	{ newCompositeNode(grammarAccess.getPathRule()); }
	iv_rulePath=rulePath
	{ $current=$iv_rulePath.current.getText(); }
	EOF;

// Rule Path
rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_PID_0=RULE_PID
		{
			$current.merge(this_PID_0);
		}
		{
			newLeafNode(this_PID_0, grammarAccess.getPathAccess().getPIDTerminalRuleCall_0());
		}
		(
			(RULE_PID)=>
			this_PID_1=RULE_PID
			{
				$current.merge(this_PID_1);
			}
			{
				newLeafNode(this_PID_1, grammarAccess.getPathAccess().getPIDTerminalRuleCall_1());
			}
		)*
	)
;

// Entry rule entryRuleBREAK
entryRuleBREAK returns [String current=null]:
	{ newCompositeNode(grammarAccess.getBREAKRule()); }
	iv_ruleBREAK=ruleBREAK
	{ $current=$iv_ruleBREAK.current.getText(); }
	EOF;

// Rule BREAK
ruleBREAK returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw=LineFeed
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBREAKAccess().getLineFeedKeyword_0());
		}
		    |
		kw=CarriageReturn
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getBREAKAccess().getCarriageReturnKeyword_1());
		}
	)*
;
