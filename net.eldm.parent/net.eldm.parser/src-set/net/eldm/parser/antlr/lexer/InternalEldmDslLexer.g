/*
 * generated by Xtext 2.15.0
 */
lexer grammar InternalEldmDslLexer;

@header {
package net.eldm.parser.antlr.lexer;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

Test10 : '{test:10}';

PlugDsl : 'plug-dsl';

Block : '<block>';

Typedef : 'typedef';

Module : 'module';

Return : 'return';

Exp : '<exp>';

Async : 'async';

False : 'false';

Regex : 'regex';

Bool : 'bool';

Defs : 'defs';

Enum : 'enum';

From : 'from';

Lda_1 : 'lda@';

Ldt_1 : 'ldt@';

Ltm_1 : 'ltm@';

Mask : 'mask';

Null : 'null';

Path : 'path';

True : 'true';

Any : 'any';

Def : 'def';

Flt : 'flt';

Get : 'get';

Int : 'int';

Lda : 'lda';

Ldt : 'ldt';

Let : 'let';

Ltm : 'ltm';

Mut : 'mut';

Set : 'set';

Str : 'str';

NumberSignLeftParenthesis : '#(';

HyphenMinusGreaterThanSign : '->';

FullStopFullStop : '..';

As : 'as';

LineFeed : '\n';

CarriageReturn : '\r';

RightParenthesis : ')';

Asterisk : '*';

Comma : ',';

FullStop : '.';

Colon : ':';

EqualsSign : '=';

QuestionMark : '?';

CommercialAt : '@';

LeftSquareBracket : '[';

RightSquareBracket : ']';

LeftCurlyBracket : '{';

RightCurlyBracket : '}';

fragment RULE_BEGIN : ;

fragment RULE_END : ;

RULE_PID : '/' ('a'..'z'|'-'|'0'..'9')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'-'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_NATURAL : '-'? RULE_INT;

RULE_FLOAT : RULE_NATURAL ('.' RULE_INT)?;

RULE_TEXT : ('\'' ( options {greedy=false;} : . )*'\''|'"""' ( options {greedy=false;} : . )*'"""');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
