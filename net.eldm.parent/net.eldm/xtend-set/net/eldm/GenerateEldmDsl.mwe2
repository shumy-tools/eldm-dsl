module net.eldm.GenerateEldmDsl

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*
import net.eldm.gen.*

var rootPath = ".."

Workflow {
  component = CleanGen {
    all = true
  }
  
  //change to XtextGenerator to rebuild all modules
  component = MyXtextGenerator {
    configuration = {
      project = StandardProjectConfig {
        baseName = "net.eldm"
        rootPath = rootPath
        runtimeTest = {
          enabled = true
        }
        eclipsePlugin = {
          enabled = true
        }
        eclipsePluginTest = {
          enabled = false
        }
        createEclipseMetaData = true
      }
      code = {
        encoding = "UTF-8"
        lineDelimiter = "\n"
        fileHeader = "/*\n * generated by Xtext \${version}\n */"
      }
    }
    language = StandardLanguage {
      name = "net.eldm.EldmDsl"
      fileExtensions = "eldm"
      serializer = {
        generateStub = false
      }
      validator = {
        generateDeprecationValidation = true
      }
      junitSupport = {
        junitVersion = "5"
      }
    }
  }
  
  //change to XtextGenerator to rebuild all modules
  component = MyXtextGenerator {
    configuration = {
      project = StandardProjectConfig {
        baseName = "net.eldm"
        rootPath = rootPath
        runtimeTest = {
          enabled = true
        }
        eclipsePlugin = {
          enabled = true
        }
        eclipsePluginTest = {
          enabled = false
        }
        createEclipseMetaData = true
      }
      code = {
        encoding = "UTF-8"
        lineDelimiter = "\n"
        fileHeader = "/*\n * generated by Xtext \${version}\n */"
      }
    }
    language = StandardLanguage {
      name = "net.eldm.SchDsl"
      fileExtensions = "sch"

      serializer = {
        generateStub = false
      }
      validator = {
        generateDeprecationValidation = true
      }
      junitSupport = {
        junitVersion = "5"
      }
    }
  }
  
  component = MoveGen {}
  component = CleanGen {}
}
